--- ChangeLog	2025-09-28 18:50:06.933864316 -0400
+++ ChangeLog-spell-corrected	2025-09-28 18:49:47.641822080 -0400
@@ -87,7 +87,7 @@
 
 2024-12-12  rocky <rb@dustyfeet.com>
 
-	* .pre-commit-config.yaml, admin-tools/setup-python-2.4.sh: 
+	* .pre-commit-config.yaml, admin-tools/setup-python-2.4.sh:
 	Administrivia
 
 2024-12-02  rocky <rb@dustyfeet.com>
@@ -113,7 +113,7 @@
 
 2024-11-28  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/tok.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/scanners/tok.py, uncompyle6/semantics/pysource.py:
 	Don't remove LOAD_CONST RETURN_VALUE when...  the LOAD_CONST has a non-None value, or the LOAD_CONST has a line
 	associated with it.
 
@@ -148,7 +148,7 @@
 	uncompyle6/semantics/customize36.py,
 	uncompyle6/semantics/customize37.py,
 	uncompyle6/semantics/customize38.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Don't update global tables...  Work off of copies of them instead. Issue #503
 
 2024-11-09  rocky <rb@dustyfeet.com>
@@ -195,12 +195,12 @@
 
 2024-10-04  rocky <rb@dustyfeet.com>
 
-	* admin-tools/setup-python-3.0.sh, admin-tools/setup-python-3.3.sh: 
+	* admin-tools/setup-python-3.0.sh, admin-tools/setup-python-3.3.sh:
 	Track branch changes in python-spark
 
 2024-09-21  rocky <rb@dustyfeet.com>
 
-	* admin-tools/.gitignore, admin-tools/setup-python-3.3.sh: 
+	* admin-tools/.gitignore, admin-tools/setup-python-3.3.sh:
 	Adminsitrivia
 
 2024-09-21  rocky <rb@dustyfeet.com>
@@ -222,13 +222,13 @@
 2024-07-22  rocky <rb@dustyfeet.com>
 
 	* admin-tools/setup-master.sh, admin-tools/setup-python-2.4.sh,
-	admin-tools/setup-python-3.0.sh, admin-tools/setup-python-3.3.sh: 
+	admin-tools/setup-python-3.0.sh, admin-tools/setup-python-3.3.sh:
 	Administrivia
 
 2024-07-22  rocky <rb@dustyfeet.com>
 
 	* admin-tools/checkout_common.sh, admin-tools/setup-master.sh,
-	admin-tools/setup-python-3.0.sh, admin-tools/setup-python-3.3.sh: 
+	admin-tools/setup-python-3.0.sh, admin-tools/setup-python-3.3.sh:
 	Administrivia
 
 2024-07-22  rocky <rb@dustyfeet.com>
@@ -237,7 +237,7 @@
 
 2024-07-21  rocky <rb@dustyfeet.com>
 
-	* NEWS.md, pyproject.toml, requirements.txt, uncompyle6/version.py: 
+	* NEWS.md, pyproject.toml, requirements.txt, uncompyle6/version.py:
 	Get ready for release 3.9.2
 
 2024-07-21  rocky <rb@dustyfeet.com>
@@ -274,7 +274,7 @@
 
 2024-07-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner38.py: 
+	* uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner38.py:
 	Handle long dict litereals in 3.4- better...  Bracket in pseudo op COLLECTION_START ... BUILD_xx
 
 2024-07-14  rocky <rb@dustyfeet.com>
@@ -287,7 +287,7 @@
 2024-07-13  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug34/03_ifelse_in_lambda.py,
-	uncompyle6/parsers/parse34.py, uncompyle6/parsers/parse35.py: 
+	uncompyle6/parsers/parse34.py, uncompyle6/parsers/parse35.py:
 	Improve 3.4 ifelse inside a lambda Fixes #426
 
 2024-07-13  rocky <rb@dustyfeet.com>
@@ -339,7 +339,7 @@
 
 	* uncompyle6/parsers/reducecheck/tryexcept.py,
 	uncompyle6/scanner.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/semantics/aligner.py, uncompyle6/semantics/linemap.py: 
+	uncompyle6/semantics/aligner.py, uncompyle6/semantics/linemap.py:
 	Python 2.5 try/except reduce fix Start getting aligner up to date
 
 2024-07-12  rocky <rb@dustyfeet.com>
@@ -361,7 +361,7 @@
 2024-07-12  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug25/06_if_and_bugs.py,
-	uncompyle6/parsers/parse25.py, uncompyle6/semantics/customize25.py: 
+	uncompyle6/parsers/parse25.py, uncompyle6/semantics/customize25.py:
 	Fix some 2.5 parsing bugs
 
 2024-07-12  rocky <rb@dustyfeet.com>
@@ -417,7 +417,7 @@
 
 2024-06-03  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse37base.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse37base.py:
 	Use set literals
 
 2024-06-03  rocky <rb@dustyfeet.com>
@@ -467,7 +467,7 @@
 2024-03-14  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py:
 	Name phases "disassembly" and "tokenization"
 
 2024-03-14  rocky <rb@dustyfeet.com>
@@ -478,7 +478,7 @@
 	uncompyle6/parsers/reducecheck/ifstmts_jump.py,
 	uncompyle6/scanners/scanner37base.py,
 	uncompyle6/semantics/gencomp.py,
-	uncompyle6/semantics/make_function2.py: Mis spelling corrections
+	uncompyle6/semantics/make_function2.py: Spelling corrections
 
 2024-03-13  rocky <rb@dustyfeet.com>
 
@@ -561,7 +561,7 @@
 
 	* uncompyle6/scanners/scanner3.py,
 	uncompyle6/scanners/scanner37.py, uncompyle6/semantics/pysource.py,
-	uncompyle6/semantics/transform.py: mark "psuedo ops"
+	uncompyle6/semantics/transform.py: mark "pseudo ops"
 
 2024-02-24  rocky <rb@dustyfeet.com>
 
@@ -580,7 +580,7 @@
 	test/stdlib/3.8-exclude.sh, test/stdlib/runtests.sh,
 	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner37.py,
 	uncompyle6/scanners/scanner37base.py, uncompyle6/scanners/tok.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/n_actions.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/n_actions.py:
 	Keep optype info in token...  It is useful for ADD_VALUE
 
 2024-02-24  rocky <rb@dustyfeet.com>
@@ -595,12 +595,12 @@
 
 2024-02-24  rocky <rb@dustyfeet.com>
 
-	* admin-tools/setup-python-3.0.sh, admin-tools/setup-python-3.3.sh: 
+	* admin-tools/setup-python-3.0.sh, admin-tools/setup-python-3.3.sh:
 	Administrivia
 
 2024-02-24  rocky <rb@dustyfeet.com>
 
-	* admin-tools/setup-master.sh, admin-tools/setup-python-2.4.sh: 
+	* admin-tools/setup-master.sh, admin-tools/setup-python-2.4.sh:
 	Administrivia
 
 2024-02-24  rocky <rb@dustyfeet.com>
@@ -671,7 +671,7 @@
 
 2024-02-12  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/n_actions.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/n_actions.py:
 	Bugs found in 3.0 decomplation...  parsers/parse30.py; fix set comprehension grammar bug
 	uncompyle6/semantics/n_actions.py: evidence of the evils of
 	modifying node data (via node.pop)
@@ -691,7 +691,7 @@
 
 	* uncompyle6/bin/uncompile.py, uncompyle6/main.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse33.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner33.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner33.py:
 	Handle 3.3 MAKE_FUNCTION annotation args properly
 
 2024-02-11  rocky <rb@dustyfeet.com>
@@ -766,7 +766,7 @@
 2024-02-03  rocky <rb@dustyfeet.com>
 
 	* .gitignore, test/test_pythonlib.py, uncompyle6/main.py,
-	uncompyle6/semantics/linemap.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/linemap.py, uncompyle6/semantics/pysource.py:
 	lint
 
 2024-02-03  rocky <rb@dustyfeet.com>
@@ -776,7 +776,7 @@
 2024-02-03  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/main.py, uncompyle6/semantics/fragments.py,
-	uncompyle6/semantics/linemap.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/linemap.py, uncompyle6/semantics/pysource.py:
 	Fix up linemap option
 
 2024-01-19  R. Bernstein <rocky@users.noreply.github.com>
@@ -848,7 +848,7 @@
 
 2023-08-12  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse30.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse30.py:
 	comprehension in lambda for 3.0 & 3.1
 
 2023-08-12  R. Bernstein <rocky@users.noreply.github.com>
@@ -873,7 +873,7 @@
 	* uncompyle6/parser.py, uncompyle6/parsers/parse26.py,
 	uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse30.py, uncompyle6/parsers/parse37.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize37.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize37.py:
 	chained-compare1 -> chained-compare-middle
 
 2023-07-07  rocky <rb@dustyfeet.com>
@@ -929,7 +929,7 @@
 	* admin-tools/setup-master.sh, uncompyle6/bin/uncompile.py,
 	uncompyle6/parsers/parse33.py, uncompyle6/parsers/parse34.py,
 	uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/semantics/gencomp.py, uncompyle6/semantics/n_actions.py: 
+	uncompyle6/semantics/gencomp.py, uncompyle6/semantics/n_actions.py:
 	Correct generator function parsing for 3.3..3.5
 
 2023-06-29  rocky <rb@dustyfeet.com>
@@ -1051,7 +1051,7 @@
 
 	* uncompyle6/scanners/tok.py: self.opc.version ->
 	self.opc.version_tuple The next release of xdis will no longer support self.opc.version (a
-	float value which doesn't work in the presense of 3.10 and above)
+	float value which doesn't work in the presence of 3.10 and above)
 
 2023-01-16  rocky <rb@dustyfeet.com>
 
@@ -1089,7 +1089,7 @@
 2023-01-14  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parser.py, uncompyle6/scanners/scanner3.py: 3.4-3.5
-	MAKE_CLOSURE with annotate Docs lie about annnotation args. Slight adjustment here.  More is
+	MAKE_CLOSURE with annotate Docs lie about annotation args. Slight adjustment here.  More is
 	probably needed.
 
 2022-12-22  rocky <rb@dustyfeet.com>
@@ -1199,7 +1199,7 @@
 2022-11-04  rocky <rb@dustyfeet.com>
 
 	* admin-tools/{pyenv-3.1-3.2-versions => pyenv-3.0-3.2-versions},
-	admin-tools/setup-python-3.0.sh: Alow 3.0 setup
+	admin-tools/setup-python-3.0.sh: Allow 3.0 setup
 
 2022-11-04  rocky <rb@dustyfeet.com>
 
@@ -1207,7 +1207,7 @@
 
 2022-11-04  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/gencomp.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/gencomp.py:
 	Correct 3.0 list comprehension parsing
 
 2022-11-03  rocky <rb@dustyfeet.com>
@@ -1311,7 +1311,7 @@
 
 2022-09-21  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/pysource.py: Hande Python 3.5 make_function()
+	* uncompyle6/semantics/pysource.py: Handle Python 3.5 make_function()
 	semantic action Fixes #409
 
 2022-09-20  rocky <rb@dustyfeet.com>
@@ -1448,7 +1448,7 @@
 2022-06-16  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug38/00_while_true_pass.py,
-	uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize38.py: 
+	uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize38.py:
 	Python 3.8 while and whileTrue loops
 
 2022-06-08  rocky <rb@dustyfeet.com>
@@ -1470,9 +1470,9 @@
 
 	* .github/workflows/osx.yml, .github/workflows/ubuntu.yml,
 	.github/workflows/windows.yml, admin-tools/pyenv-newest-versions,
-	test/stdlib/3.7-exclude.sh, uncompyle6/scanners/pypy38.py: 
+	test/stdlib/3.7-exclude.sh, uncompyle6/scanners/pypy38.py:
 	Administrivia Workflows CI: go back to released versions rather than github
-	versions pyenv-newest-versions: updaed to use newest Python releases
+	versions pyenv-newest-versions: updated to use newest Python releases
 	pypy38.py: fix wrong package name import 3.6-exclude.sh: update and
 	advance
 
@@ -1549,13 +1549,13 @@
 	* uncompyle6/parsers/parse36.py, uncompyle6/parsers/parse37.py,
 	uncompyle6/parsers/parse37base.py, uncompyle6/parsers/parse38.py,
 	uncompyle6/scanners/scanner37base.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/gencomp.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/gencomp.py:
 	Start rolling in LOAD_ARG for 3.7+
 
 2022-05-05  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/03_async_from_coroutine.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize36.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize36.py:
 	Fix More 3.6 async parsing ... all from 3.6 test_coroutines.py.  More bugs remain
 
 2022-05-05  rocky <rb@dustyfeet.com>
@@ -1639,12 +1639,12 @@
 
 	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/scanner.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner37.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner37.py:
 	Handle long 2.x bytecode literals more efficiently
 
 2022-04-27  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner37.py: 
+	* uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner37.py:
 	Small doc corrections
 
 2022-04-27  rocky <rb@dustyfeet.com>
@@ -1681,7 +1681,7 @@
 2022-04-25  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/scanner.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner37.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner37.py:
 	WIP - extend fast long-literals into older Python3
 
 2022-04-25  rocky <rb@dustyfeet.com>
@@ -1702,7 +1702,7 @@
 
 	* test/simple_source/expression/05_long_literals.py,
 	uncompyle6/scanner.py, uncompyle6/scanners/scanner37base.py,
-	uncompyle6/semantics/n_actions.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/n_actions.py, uncompyle6/semantics/pysource.py:
 	Bugs in long-literal handlin Move n_dict to n_actions and special case n_const_list.  Generalize
 	build_collection out of 3.7+ and into all Pythons
 
@@ -1728,7 +1728,7 @@
 
 2022-04-21  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/treenode.py, uncompyle6/semantics/transform.py: 
+	* uncompyle6/parsers/treenode.py, uncompyle6/semantics/transform.py:
 	Add "transfrormd_by" param to SyntaxTree This aligns code more with decompyle3
 
 2022-04-20  rocky <rb@dustyfeet.com>
@@ -1747,7 +1747,7 @@
 
 2022-04-17  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/gencomp.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/gencomp.py, uncompyle6/semantics/pysource.py:
 	Fold in some decompile changes
 
 2022-04-17  rocky <rb@dustyfeet.com>
@@ -1764,7 +1764,7 @@
 2022-04-17  rocky <rb@dustyfeet.com>
 
 	* Makefile, uncompyle6/semantics/gencomp.py,
-	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py:
 	Split out comprehension code..  sync with decompile a little better
 
 2022-04-17  rocky <rb@dustyfeet.com>
@@ -1774,7 +1774,7 @@
 
 2022-04-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/pypy37.py, uncompyle6/scanners/scanner37.py: 
+	* uncompyle6/scanners/pypy37.py, uncompyle6/scanners/scanner37.py:
 	Correct for pypy 3.7
 
 2022-04-15  rocky <rb@dustyfeet.com>
@@ -1826,7 +1826,7 @@
 2022-04-01  rocky <rb@dustyfeet.com>
 
 	* admin-tools/pyenv-newest-versions,
-	uncompyle6/semantics/pysource.py: Small changes test code for pysource and bump lastest testing Python versions
+	uncompyle6/semantics/pysource.py: Small changes test code for pysource and bump latest testing Python versions
 
 2022-03-12  rocky <rb@dustyfeet.com>
 
@@ -1902,7 +1902,7 @@
 2022-03-04  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/aligner.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Some small variable-name changes
 
 2022-03-03  rocky <rb@dustyfeet.com>
@@ -1915,12 +1915,12 @@
 	* test/simple_source/bug36/02_genexpr.py,
 	test/simple_source/bug36/05_36lambda.py,
 	uncompyle6/parsers/parse36.py, uncompyle6/parsers/parse37.py,
-	uncompyle6/parsers/parse37base.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/parsers/parse37base.py, uncompyle6/scanners/scanner3.py:
 	MAKE_FUNCTION_8 -> MAKE_FUNCTION_CLOSURE Clarity is important.
 
 2022-02-27  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	Remove TABLE_R0 - it hasn't been used in a while
 
 2022-01-18  rocky <rb@dustyfeet.com>
@@ -2009,7 +2009,7 @@
 	uncompyle6/parsers/parse37.py, uncompyle6/parsers/parse37base.py,
 	uncompyle6/semantics/consts.py,
 	uncompyle6/semantics/customize37.py,
-	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py:
 	mklambda -> lambda_body matches Python AST better Note: we can't use "lambda" since that is a reserved word
 
 2021-12-23  rocky <rb@dustyfeet.com>
@@ -2142,7 +2142,7 @@
 	uncompyle6/scanners/tok.py, uncompyle6/semantics/consts.py,
 	uncompyle6/semantics/helper.py,
 	uncompyle6/semantics/make_function2.py,
-	uncompyle6/semantics/make_function36.py, uncompyle6/verify.py: 
+	uncompyle6/semantics/make_function36.py, uncompyle6/verify.py:
 	Python 3.6+ specialization
 
 2021-11-03  rocky <rb@dustyfeet.com>
@@ -2200,7 +2200,7 @@
 
 2021-10-26  rocky <rb@dustyfeet.com>
 
-	* __pkginfo__.py, admin-tools/make-dist-older.sh, setup.py: 
+	* __pkginfo__.py, admin-tools/make-dist-older.sh, setup.py:
 	Admnistrivia: package info
 
 2021-10-26  rocky <rb@dustyfeet.com>
@@ -2236,7 +2236,7 @@
 
 2021-10-23  rocky <rb@dustyfeet.com>
 
-	* admin-tools/setup-master.sh, uncompyle6/semantics/fragments.py: 
+	* admin-tools/setup-master.sh, uncompyle6/semantics/fragments.py:
 	Fragment and other bugs Part of the upgrade process
 
 2021-10-23  rocky <rb@dustyfeet.com>
@@ -2279,7 +2279,7 @@
 
 2021-10-21  rocky <rb@dustyfeet.com>
 
-	* .github/workflows/ubuntu.yml: Worflows CI testing
+	* .github/workflows/ubuntu.yml: Workflows CI testing
 
 2021-10-21  rocky <rb@dustyfeet.com>
 
@@ -2316,8 +2316,8 @@
 
 2021-10-19  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse35.py, uncompyle6/scanners/scanner36.py: 
-	Revise Python version comparisions And set scanner.show_asm for 3.6
+	* uncompyle6/parsers/parse35.py, uncompyle6/scanners/scanner36.py:
+	Revise Python version comparisons And set scanner.show_asm for 3.6
 
 2021-10-18  rocky <rb@dustyfeet.com>
 
@@ -2384,7 +2384,7 @@
 	uncompyle6/semantics/customize.py,
 	uncompyle6/semantics/customize3.py, uncompyle6/semantics/helper.py,
 	uncompyle6/semantics/make_function3.py,
-	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py: 
+	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py:
 	new dis - Python compisons involving tuples
 
 2021-10-12  rocky <rb@dustyfeet.com>
@@ -2446,7 +2446,7 @@
 
 2020-12-31  R. Bernstein <rocky@users.noreply.github.com>
 
-	* : Merge pull request #340 from timgates42/bugfix_typo_unnecessary docs: fix simple typo, unecessary -> unnecessary
+	* : Merge pull request #340 from timgates42/bugfix_typo_unnecessary docs: fix simple typo, unecessary -> uxonnecessary
 
 2020-12-27  rocky <rb@dustyfeet.com>
 
@@ -2454,7 +2454,7 @@
 	3.7+ We were producing: ``` z: z: int = 5 on bytecode_3.7_run/02_var_annotate.pyc ``` because grammar went      5. sstmt         ann_assign (4) transformed by n_stmts: ('%|%[2]{attr}:
 	             %c\n', 0) 0. ann_assign_init (3): ('%|%[2]{attr}: %c = %c\n', 0, 1) The "ann_assign" added "z:". Instead we have now: ```      5. sstmt         ann_assign_init (3) transformed by n_stmts: ('%|%[2]{attr}:
 	        %c = %c\n', 0, 1) ``` Also, in the previous statement which appears in the listing (but is
-	not actually in the finaly tree) we had:      4. sstmt         assign (2): ('%|%c = %p\n', -1, (0, 200))              0. expr                 L. L.   7        26  LOAD_CONST               5              1. store So we now preface the node type with "deleted", e.g.:      4. deleted sstmt         assign (2): ('%|%c = %p\n', -1, (0, 200))              0. expr                 L. L.   7        26  LOAD_CONST               5              1. store to reduce confusion
+	not actually in the finally tree) we had:      4. sstmt         assign (2): ('%|%c = %p\n', -1, (0, 200))              0. expr                 L. L.   7        26  LOAD_CONST               5              1. store So we now preface the node type with "deleted", e.g.:      4. deleted sstmt         assign (2): ('%|%c = %p\n', -1, (0, 200))              0. expr                 L. L.   7        26  LOAD_CONST               5              1. store to reduce confusion
 
 2020-12-27  R. Bernstein <rocky@users.noreply.github.com>
 
@@ -2508,13 +2508,13 @@
 	uncompyle6/parsers/parse26.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse31.py, uncompyle6/parsers/parse37.py,
 	uncompyle6/parsers/parse37base.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	del_stmt -> delete to match Python AST better
 
 2020-09-01  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse38.py,
-	uncompyle6/semantics/customize38.py: little sync with decompyle3 Add another forelsestmt (found only in a loop) Add precidence on
+	uncompyle6/semantics/customize38.py: little sync with decompyle3 Add another forelsestmt (found only in a loop) Add precedence on
 	walrus operator
 
 2020-09-01  rocky <rb@dustyfeet.com>
@@ -2574,7 +2574,7 @@
 	uncompyle6/semantics/make_function2.py,
 	uncompyle6/semantics/make_function3.py,
 	uncompyle6/semantics/make_function36.py,
-	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py: 
+	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py:
 	Use "co_consts" in docstring detection.  Note: this is an upheaval because we need to pass "code" or at least
 	"code.co_consts" to the docstring detection routine
 
@@ -2585,7 +2585,7 @@
 2020-07-19  rocky <rb@dustyfeet.com>
 
 	* test/add-test.py, test/simple_source/bug27+/03_doc_assign.py,
-	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py: 
+	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py:
 	Better doc string detection A bug in 2.7 test_descr.py revealed a problem with the way we were
 	detecting docstrings.          __doc__ = DocDescr() was getting confused with a docstring.  This program also reveals other bugs in 3.2+ but we'll deal with
 	that in another commit.
@@ -2638,7 +2638,7 @@
 
 2020-07-06  rocky <rb@dustyfeet.com>
 
-	* .github/ISSUE_TEMPLATE/bug-report.md, HOW-TO-REPORT-A-BUG.md: 
+	* .github/ISSUE_TEMPLATE/bug-report.md, HOW-TO-REPORT-A-BUG.md:
 	Update bug-fixing expectations
 
 2020-07-06  rocky <rb@dustyfeet.com>
@@ -2725,7 +2725,7 @@
 2020-06-15  rocky <rb@dustyfeet.com>
 
 	* admin-tools/how-to-make-a-release.md,
-	uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize38.py: 
+	uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize38.py:
 	Towards fixing a 3.8 try except-as bug
 
 2020-06-12  rocky <rb@dustyfeet.com>
@@ -2739,7 +2739,7 @@
 
 2020-06-12  rocky <rb@dustyfeet.com>
 
-	* .circleci/config.yml, .travis.yml, NEWS.md, uncompyle6/version.py: 
+	* .circleci/config.yml, .travis.yml, NEWS.md, uncompyle6/version.py:
 	Get ready for release 3.7.1
 
 2020-06-12  rocky <rb@dustyfeet.com>
@@ -2885,7 +2885,7 @@
 
 2020-05-09  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/linenumbers.py: Simpify an import, blacken a file.
+	* uncompyle6/linenumbers.py: Simplify an import, blacken a file.
 
 2020-05-08  rocky <rb@dustyfeet.com>
 
@@ -2916,7 +2916,7 @@
 
 	* uncompyle6/parsers/parse37base.py,
 	uncompyle6/semantics/customize37.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Bugs in nested async for...  * Generalize asyc_for rule  Fix bug in picking out comprehension iterator in async for * fix bug in getting expression in such a comprehension * Add %[n]{%x} pattern to template_engine()
 
 2020-04-27  rocky <rb@dustyfeet.com>
@@ -2970,7 +2970,7 @@
 2020-04-20  rocky <rb@dustyfeet.com>
 
 	* .travis.yml, __pkginfo__.py, uncompyle6/disas.py,
-	uncompyle6/linenumbers.py, uncompyle6/main.py, uncompyle6/verify.py: 
+	uncompyle6/linenumbers.py, uncompyle6/main.py, uncompyle6/verify.py:
 	Update to use xdis 4.4.0 ...  with more correct SipHash and other needed bug fixes.
 
 2020-04-18  rocky <rb@dustyfeet.com>
@@ -3106,7 +3106,7 @@
 	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner2.py,
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py,
 	uncompyle6/scanners/scanner37base.py: whileelse in 3.6 sometimes has
-	come froms...  also remove extra "L. " in token printing
+	come_froms...  also remove extra "L. " in token printing
 
 2020-04-04  rocky <rb@dustyfeet.com>
 
@@ -3294,7 +3294,7 @@
 
 2020-02-13  rocky <rb@dustyfeet.com>
 
-	* test/stdlib/3.7-exclude.sh, uncompyle6/semantics/transform.py: 
+	* test/stdlib/3.7-exclude.sh, uncompyle6/semantics/transform.py:
 	transform ifelseif bugs
 
 2020-02-11  rocky <rb@dustyfeet.com>
@@ -3335,7 +3335,7 @@
 2020-02-10  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/transform.py: Fix bug introduced by ast
-	"tranform" change
+	"transform" change
 
 2020-02-10  rocky <rb@dustyfeet.com>
 
@@ -3370,7 +3370,7 @@
 
 2020-02-10  rocky <rb@dustyfeet.com>
 
-	* test/stdlib/3.5-exclude.sh, uncompyle6/semantics/transform.py: 
+	* test/stdlib/3.5-exclude.sh, uncompyle6/semantics/transform.py:
 	is_docsting needs to test for sstmts
 
 2020-02-10  rocky <rb@dustyfeet.com>
@@ -3425,7 +3425,7 @@
 	uncompyle6/parsers/parse36.py, uncompyle6/semantics/consts.py,
 	uncompyle6/semantics/customize35.py,
 	uncompyle6/semantics/customize37.py: async with rules back to 3.5
-	and ...  add precidence on cascaded "await" expressions
+	and ...  add precedence on cascaded "await" expressions
 
 2020-02-08  rocky <rb@dustyfeet.com>
 
@@ -3491,7 +3491,7 @@
 
 	* test/stdlib/3.2-exclude.sh, test/stdlib/3.4-exclude.sh,
 	test/stdlib/3.5-exclude.sh, test/stdlib/3.6-exclude.sh: Go over
-	3.2-3.6 runtests.sh exludes...  Reinstate a lot of tests broken since c90ff51
+	3.2-3.6 runtests.sh excludes...  Reinstate a lot of tests broken since c90ff51
 
 2020-02-07  rocky <rb@dustyfeet.com>
 
@@ -3521,7 +3521,7 @@
 	uncompyle6/parsers/parse37base.py, uncompyle6/semantics/consts.py,
 	uncompyle6/semantics/customize3.py,
 	uncompyle6/semantics/customize36.py,
-	uncompyle6/semantics/customize37.py, uncompyle6/semantics/helper.py: 
+	uncompyle6/semantics/customize37.py, uncompyle6/semantics/helper.py:
 	conditional -> if_exp ...  to match Python IfExp AST
 
 2020-02-06  rocky <rb@dustyfeet.com>
@@ -3598,7 +3598,7 @@
 
 2020-02-04  rocky <rb@dustyfeet.com>
 
-	* test/stdlib/2.5-exclude.sh, uncompyle6/semantics/transform.py: 
+	* test/stdlib/2.5-exclude.sh, uncompyle6/semantics/transform.py:
 	Adjust assert transform for new "if_and" rule
 
 2020-02-04  rocky <rb@dustyfeet.com>
@@ -3608,7 +3608,7 @@
 
 2020-02-02  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	__modname__  and __qualname__ detection...  since grammar has simplified.  May still need work for Python < 3.0
 
 2020-02-02  rocky <rb@dustyfeet.com>
@@ -3798,7 +3798,7 @@
 2020-01-29  rocky <rb@dustyfeet.com>
 
 	* test/stdlib/3.7-exclude.sh, test/stdlib/3.8-exclude.sh,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	Track grammar "stmt" simplifications class ...  * NAME_MODULE constant * QUAL_NAME constant
 
 2020-01-28  rocky <rb@dustyfeet.com>
@@ -3870,7 +3870,7 @@
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/reducecheck/ifstmt.py,
-	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py: 
+	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py:
 	More 3.x "if" checking. Abbreviate stmts->sstmt
 
 2020-01-26  rocky <rb@dustyfeet.com>
@@ -3910,7 +3910,7 @@
 
 2020-01-25  rocky <rb@dustyfeet.com>
 
-	* test/stdlib/3.3-exclude.sh, uncompyle6/parsers/parse35.py: 
+	* test/stdlib/3.3-exclude.sh, uncompyle6/parsers/parse35.py:
 	Cut-n-paste grammar rule bug
 
 2020-01-25  rocky <rb@dustyfeet.com>
@@ -4045,16 +4045,16 @@
 	uncompyle6/parsers/reducecheck/ifstmt.py,
 	uncompyle6/parsers/reducecheck/while1stmt.py,
 	uncompyle6/semantics/pysource.py: Largish rework: scan while1stmt
-	for jump out ..  to disambiguate.  For this, we use the self.opc JUMP_OPS sets.  For this, we neeed to
+	for jump out ..  to disambiguate.  For this, we use the self.opc JUMP_OPS sets.  For this, we need to
 	store opc in the parse object.  DRY uses of "last = min(last, len(tokens))
 
 2020-01-23  rocky <rb@dustyfeet.com>
 
-	* test/stdlib/3.7-exclude.sh: Exclue 3.7 test_binascii.py for now
+	* test/stdlib/3.7-exclude.sh: Exclude 3.7 test_binascii.py for now
 
 2020-01-23  rocky <rb@dustyfeet.com>
 
-	* test/stdlib/3.8-exclude.sh, uncompyle6/semantics/transform.py: 
+	* test/stdlib/3.8-exclude.sh, uncompyle6/semantics/transform.py:
 	Mini-sync with decompyle3: go over runtests.sh 3.8 excludes
 
 2020-01-23  rocky <rb@dustyfeet.com>
@@ -4222,7 +4222,7 @@
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse37.py: More
 	parser changes to reinstate what was working in 3.6.2...  However, again, probably more precise since we isolate loop rules
-	better However, again, this isnt' the full store. Semantics were incorrect
+	better However, again, this isn't the full store. Semantics were incorrect
 	in Release 3.6.2 and they still are.
 
 2020-01-17  rocky <rb@dustyfeet.com>
@@ -4237,7 +4237,7 @@
 2020-01-16  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/def/01_class.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	parens around consts when taking attr again
 
 2020-01-16  rocky <rb@dustyfeet.com>
@@ -4273,7 +4273,7 @@
 2020-01-15  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/reducecheck/ifelsestmt.py: 3.7 and 2.6
-	coexistance in handling jump targets
+	coexistence in handling jump targets
 
 2020-01-15  rocky <rb@dustyfeet.com>
 
@@ -4349,13 +4349,13 @@
 
 2020-01-14  rocky <rb@dustyfeet.com>
 
-	* test/stdlib/3.7-exclude.sh, uncompyle6/semantics/customize36.py: 
+	* test/stdlib/3.7-exclude.sh, uncompyle6/semantics/customize36.py:
 	3.7 test_fstring now works.
 
 2020-01-13  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/10_fstring.py,
-	test/stdlib/3.6-exclude.sh, uncompyle6/semantics/customize36.py: 
+	test/stdlib/3.6-exclude.sh, uncompyle6/semantics/customize36.py:
 	Handle set/dictionary comprehensions in format strings
 
 2020-01-13  rocky <rb@dustyfeet.com>
@@ -4432,7 +4432,7 @@
 2020-01-12  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/01_fstring.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/transform.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/transform.py:
 	Wacky string at beginning of fn which is not docstring...  3.7.6 test_fstring.py tests this.
 
 2020-01-12  rocky <rb@dustyfeet.com>
@@ -4833,7 +4833,7 @@
 
 2020-01-06  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py: Accomodate "return" in an except
+	* uncompyle6/parsers/parse2.py: Accommodate "return" in an except
 	handler
 
 2020-01-06  rocky <rb@dustyfeet.com>
@@ -4867,8 +4867,8 @@
 
 2020-01-06  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse21.py, uncompyle6/parsers/parse24.py: 
-	Python 2.4- doesn't have condition expresions
+	* uncompyle6/parsers/parse21.py, uncompyle6/parsers/parse24.py:
+	Python 2.4- doesn't have condition expressions
 
 2020-01-05  rocky <rb@dustyfeet.com>
 
@@ -4921,7 +4921,7 @@
 2020-01-03  rocky <rb@dustyfeet.com>
 
 	* test/stdlib/runtests.sh, uncompyle6/parser.py,
-	uncompyle6/parsers/parse37.py, uncompyle6/semantics/customize37.py: 
+	uncompyle6/parsers/parse37.py, uncompyle6/semantics/customize37.py:
 	3.7+ multiple imports of dotted path
 
 2020-01-03  rocky <rb@dustyfeet.com>
@@ -4945,7 +4945,7 @@
 2020-01-03  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug30/06_listcomp.py,
-	uncompyle6/parsers/parse37.py, uncompyle6/semantics/customize37.py: 
+	uncompyle6/parsers/parse37.py, uncompyle6/semantics/customize37.py:
 	Fix a 3.7+ chained compare bug...  others remain though.
 
 2020-01-02  rocky <rb@dustyfeet.com>
@@ -4998,11 +4998,11 @@
 
 	* uncompyle6/semantics/make_function3.py: Simplify make_function3 by
 	customization We now have different routines for 3.6+ (and 2.x from before).  This is desirable before fixing 3.0..3.5 lambdas with default
-	paramerts and * args.
+	parameters and * args.
 
 2019-12-27  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/helper.py, uncompyle6/semantics/transform.py: 
+	* uncompyle6/semantics/helper.py, uncompyle6/semantics/transform.py:
 	Tidy code.  * Don't use "str" as a variable name * blacken helper and alphabetically order fns * use helper function `find_code_node()` in transform `mk_func()`
 
 2019-12-27  rocky <rb@dustyfeet.com>
@@ -5012,7 +5012,7 @@
 	uncompyle6/semantics/make_function2.py,
 	uncompyle6/semantics/make_function3.py,
 	uncompyle6/semantics/make_function36.py,
-	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py: 
+	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py:
 	Was dropping docstrings! Add in decompyle make_function36
 
 2019-12-27  rocky <rb@dustyfeet.com>
@@ -5118,8 +5118,8 @@
 	uncompyle6/parsers/parse37base.py, uncompyle6/semantics/consts.py,
 	uncompyle6/semantics/customize.py,
 	uncompyle6/semantics/customize35.py,
-	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py: 
-	Redo the way we handle complex literals and 3.7+ bug fixes...  In 3.7+ remove assert_expr* parser rules Fix "call" precidence in
+	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py:
+	Redo the way we handle complex literals and 3.7+ bug fixes...  In 3.7+ remove assert_expr* parser rules Fix "call" precedence in
 	3.7+ for it children
 
 2019-12-18  rocky <rb@dustyfeet.com>
@@ -5175,7 +5175,7 @@
 2019-12-16  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug37/02_async_for_generator.py,
-	uncompyle6/parsers/parse37base.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse37base.py, uncompyle6/semantics/pysource.py:
 	Add 3.7 async listcomp
 
 2019-12-15  rocky <rb@dustyfeet.com>
@@ -5189,13 +5189,13 @@
 
 2019-12-15  rocky <rb@dustyfeet.com>
 
-	* admin-tools/setup-master.sh, admin-tools/setup-python-2.4.sh: 
+	* admin-tools/setup-master.sh, admin-tools/setup-python-2.4.sh:
 	Adminsitrivia: improve setup scripts
 
 2019-12-15  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/def/05_class.py, test/stdlib/runtests.sh,
-	uncompyle6/semantics/pysource.py: Fix Python 3.x pringing
+	uncompyle6/semantics/pysource.py: Fix Python 3.x printing
 	superclasses...  class Description: not class Description("Description").  Introduced
 	in not catching LOAD_CONST->LOAD_STR change
 
@@ -5268,7 +5268,7 @@
 
 2019-12-11  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse37.py, uncompyle6/parsers/parse37base.py: 
+	* uncompyle6/parsers/parse37.py, uncompyle6/parsers/parse37base.py:
 	Add 3.7+ "and" grammar rule and limit "or" more
 
 2019-12-11  rocky <rb@dustyfeet.com>
@@ -5290,7 +5290,7 @@
 	* test/simple_source/bug36/01_fstring.py,
 	test/simple_source/bug36/01_if_and_if_bug.py,
 	test/simple_source/bug36/02_call_ex_kw.py,
-	uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize38.py: 
+	uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize38.py:
 	Add another 3.8 try/finally rule and semantic action
 
 2019-12-10  rocky <rb@dustyfeet.com>
@@ -5341,7 +5341,7 @@
 2019-12-09  rocky <rb@dustyfeet.com>
 
 	* setup.py, uncompyle6/scanner.py,
-	uncompyle6/scanners/scanner38.py, uncompyle6/scanners/scanner39.py: 
+	uncompyle6/scanners/scanner38.py, uncompyle6/scanners/scanner39.py:
 	Start to tolerate 3.9 (in pydisassemble)
 
 2019-12-09  rocky <rb@dustyfeet.com>
@@ -5371,7 +5371,7 @@
 
 2019-12-08  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse37.py, uncompyle6/scanners/scanner38.py: 
+	* uncompyle6/parsers/parse37.py, uncompyle6/scanners/scanner38.py:
 	Typos: decompyle3 -> uncompyle6
 
 2019-12-08  R. Bernstein <rocky@users.noreply.github.com>
@@ -5380,7 +5380,7 @@
 
 2019-12-02  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/make_function.py: Accomodate for optional
+	* uncompyle6/semantics/make_function.pyff: Accommodate for optional
 	docstring in function kw calculation
 
 2019-11-21  rocky <rb@dustyfeet.com>
@@ -5434,7 +5434,7 @@
 
 2019-11-18  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse27.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse27.py, uncompyle6/semantics/pysource.py:
 	Two Bugs ...  2.7: more stringent comparison and comp_if testing 2.6-2.7: fix
 	botched dict constant translation
 
@@ -5470,7 +5470,7 @@
 
 2019-11-16  rocky <rb@dustyfeet.com>
 
-	* admin-tools/pyenv-newer-versions, admin-tools/setup-master.sh: 
+	* admin-tools/pyenv-newer-versions, admin-tools/setup-master.sh:
 	Administriva - bump testing versions
 
 2019-11-16  rocky <rb@dustyfeet.com>
@@ -5508,7 +5508,7 @@
 
 2019-11-16  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/scanners/scanner3.py:
 	3.0 assert2...  Not like other 3.x due to the lack of POP_JUMP_IF
 
 2019-11-16  rocky <rb@dustyfeet.com>
@@ -5517,7 +5517,7 @@
 
 2019-11-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py:
 	Add 3.0 try/except rule
 
 2019-11-15  rocky <rb@dustyfeet.com>
@@ -5549,7 +5549,7 @@
 
 2019-11-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py:
 	3.0.1 "ret_or", "ret_and", and "or" rules
 
 2019-11-15  rocky <rb@dustyfeet.com>
@@ -5568,12 +5568,12 @@
 
 2019-11-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py:
 	Two 3.0 rules ...  - ifstmtlastl - ifnotstmt30
 
 2019-11-13  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/parsers/treenode.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/parsers/treenode.py:
 	Bang on 3.0.1 control flow...  more word is needed though
 
 2019-11-12  rocky <rb@dustyfeet.com>
@@ -5609,7 +5609,7 @@
 2019-11-11  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug30/04_and_del.py,
-	uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py: 
+	uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py:
 	Cope more JUMP/POP_IF not being in 3.0...  more is probably needed though.
 
 2019-11-11  rocky <rb@dustyfeet.com>
@@ -5631,8 +5631,8 @@
 2019-11-10  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug30/03_ifelse.py,
-	uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py: 
-	More Python 3.0 custom "if" statment handling.
+	uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py:
+	More Python 3.0 custom "if" statement handling.
 
 2019-11-10  rocky <rb@dustyfeet.com>
 
@@ -5703,7 +5703,7 @@
 
 2019-10-29  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/customize36.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/customize36.py:
 	Pypy 3.6 tolerance
 
 2019-10-29  rocky <rb@dustyfeet.com>
@@ -5732,7 +5732,7 @@
 
 	* uncompyle6/semantics/customize.py,
 	uncompyle6/semantics/fragments.py,
-	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py: 
+	uncompyle6/semantics/pysource.py, uncompyle6/semantics/transform.py:
 	Pypy 3.6 tolerance
 
 2019-05-11  rocky <rb@dustyfeet.com>
@@ -5740,7 +5740,7 @@
 	* test/Makefile, test/test_pyenvlib.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/semantics/customize.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/customize.py, uncompyle6/semantics/pysource.py:
 	WIP pypy3.6 handling
 
 2019-10-28  rocky <rb@dustyfeet.com>
@@ -5774,14 +5774,14 @@
 
 2019-10-12  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/fragments.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/fragments.py:
 	Better simpler fragment fix...  remove hide_internal test. We changed the default and that's what
 	whas causing RETURN_LAST to not get included.
 
 2019-10-12  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Fragment fixes (and workarounds) fragments.py: add more parent offsets. blacken buffer parser3.py:
 	additional grammar rules for fragment parser Misc small typos and corrections
 
@@ -5854,7 +5854,7 @@
 
 2019-08-21  rocky <rb@dustyfeet.com>
 
-	* .circleci/config.yml, __pkginfo__.py, requirements-dev.txt: 
+	* .circleci/config.yml, __pkginfo__.py, requirements-dev.txt:
 	CircleCi 3rd try
 
 2019-08-21  rocky <rb@dustyfeet.com>
@@ -5958,7 +5958,7 @@
 
 2019-07-03  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/customize.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/customize.py:
 	More excpet_cond futzing
 
 2019-07-03  rocky <rb@dustyfeet.com>
@@ -6051,7 +6051,7 @@
 
 2019-06-21  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	Start to reinstate elif's
 
 2019-06-21  R. Bernstein <rocky@users.noreply.github.com>
@@ -6075,7 +6075,7 @@
 
 	* test/simple_source/bug35/07_build_map_unpack.py,
 	test/simple_source/comprehension/05_dict_comp.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py:
 	Handle 2-arg asserts in 3.6+ish Changed files have also been reformatted via the blacken formatter
 
 2019-06-16  rocky <rb@dustyfeet.com>
@@ -6118,18 +6118,18 @@
 
 2019-06-11  rocky <rb@dustyfeet.com>
 
-	* pytest/test_token.py: Formatting change slighty
+	* pytest/test_token.py: Formatting change slightly
 
 2019-06-11  rocky <rb@dustyfeet.com>
 
 	* pytest/test_token.py, pytest/testdata/if-2.7.right,
-	pytest/testdata/ifelse-2.7.right, uncompyle6/scanners/tok.py: 
+	pytest/testdata/ifelse-2.7.right, uncompyle6/scanners/tok.py:
 	Formatting in < 3.0 is different for name ops
 
 2019-06-11  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/scanners/tok.py: Nicer assembly display...  Fewer extraneous quotes and remove pattrs that don't mean anything.
-	Base more on OP poperties like varargs and NAME_OPS
+	Base more on OP properties like varargs and NAME_OPS
 
 2019-06-11  rocky <rb@dustyfeet.com>
 
@@ -6156,8 +6156,8 @@
 
 	* uncompyle6/parsers/parse36.py,
 	uncompyle6/semantics/customize36.py,
-	uncompyle6/semantics/pysource.py: Tweaks to x0ret's anotation type
-	handling - match AST names a little better: AnnAssign -> ann_assign...  - localize Annotation type grammar change only when we have it - Add reduce rule to combine assignment and annotate declaration - Add annotation-type test from Python 3.6 - Docuemnt what's up with annotation types
+	uncompyle6/semantics/pysource.py: Tweaks to x0ret's annotation type
+	handling - match AST names a little better: AnnAssign -> ann_assign...  - localize Annotation type grammar change only when we have it - Add reduce rule to combine assignment and annotate declaration - Add annotation-type test from Python 3.6 - Document what's up with annotation types
 
 2019-06-09  x0ret <x0ret@localhost>
 
@@ -6171,7 +6171,7 @@
 2019-06-11  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/scanners/tok.py: Fix LOAD_STR messing up docstring
-	comparision
+	comparison
 
 2019-06-09  R. Bernstein <rocky@users.noreply.github.com>
 
@@ -6260,7 +6260,7 @@
 
 2019-06-08  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	Another LOAD_STR/CONST isolation in < 3.0
 
 2019-06-08  rocky <rb@dustyfeet.com>
@@ -6306,7 +6306,7 @@
 2019-06-06  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/customize26_27.py,
-	uncompyle6/semantics/customize3.py, uncompyle6/semantics/helper.py: 
+	uncompyle6/semantics/customize3.py, uncompyle6/semantics/helper.py:
 	better name for call generator rule
 
 2019-06-06  R. Bernstein <rocky@users.noreply.github.com>
@@ -6332,14 +6332,14 @@
 2019-05-28  x0ret <x0ret@localhost>
 
 	* test/simple_source/stmts/00_docstring.py,
-	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py:
 	fix unicode docstring again, handling unicode string in py2, fix
 	docstring indentation
 
 2019-05-27  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/stmts/00_docstring.py: Reinstate more docstring
-	tests But 3.{6,7} are stil broken
+	tests But 3.{6,7} are still broken
 
 2019-05-27  rocky <rb@dustyfeet.com>
 
@@ -6357,13 +6357,13 @@
 
 2019-05-27  x0ret <x0ret@localhost>
 
-	* uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py:
 	towards supporting unicode: docstring
 
 2019-05-24  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/stmts/00_docstring.py,
-	uncompyle6/semantics/helper.py: Simplfy - TODO fix unicode in
+	uncompyle6/semantics/helper.py: Simplify - TODO fix unicode in
 	docstrings
 
 2019-05-24  rocky <rb@dustyfeet.com>
@@ -6453,7 +6453,7 @@
 
 2019-05-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py:
 	Only add forward-jumping COME_FROM in 3.6+ Is this a repeat commit?
 
 2019-05-13  rocky <rb@dustyfeet.com>
@@ -6512,7 +6512,7 @@
 2019-05-10  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/scanners/scanner3.py: Accept x0ret's suggestion for
-	3.6+ if detection..  in the presense of a try block.  Fixes #229
+	3.6+ if detection..  in the presence of a try block.  Fixes #229
 
 2019-05-10  rocky <rb@dustyfeet.com>
 
@@ -6535,7 +6535,7 @@
 
 	* test/simple_source/bug36/02_call_ex_kw.py,
 	uncompyle6/semantics/customize36.py: Fix 3.6. call_ex_kw semantic
-	action Was missing positional args parameter in template. Fix submited by
+	action Was missing positional args parameter in template. Fix submitted by
 	@x0ret Fixes #227
 
 2019-05-08  rocky <rb@dustyfeet.com>
@@ -6575,7 +6575,7 @@
 2019-05-05  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug26/04_ifelse_parens.py,
-	uncompyle6/semantics/consts.py: IfExp precidence handling in 2.6...  2.7 still has a bug
+	uncompyle6/semantics/consts.py: IfExp precedence handling in 2.6...  2.7 still has a bug
 
 2019-05-05  rocky <rb@dustyfeet.com>
 
@@ -6587,24 +6587,24 @@
 
 	* uncompyle6/semantics/consts.py,
 	uncompyle6/semantics/customize37.py,
-	uncompyle6/semantics/pysource.py: Fix precidence between list_if and
+	uncompyle6/semantics/pysource.py: Fix precedence between list_if and
 	if_expr in 3.x
 
 2019-05-04  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse37.py,
-	uncompyle6/semantics/customize37.py: Ned custom 3.7+ IfExp rules
+	uncompyle6/semantics/customize37.py: Need custom 3.7+ IfExp rules
 
 2019-05-04  rocky <rb@dustyfeet.com>
 
 	* test/Makefile, test/simple_source/bug37/01_and_not_else.py,
-	uncompyle6/parsers/parse37.py, uncompyle6/semantics/customize37.py: 
+	uncompyle6/parsers/parse37.py, uncompyle6/semantics/customize37.py:
 	3.7: if <expr> and not <expr> else <expr>
 
 2019-05-04  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	delete_subscr -> delete_subscript ...  to better (but not exactly) match the Python AST
 
 2019-05-04  rocky <rb@dustyfeet.com>
@@ -6614,7 +6614,7 @@
 2019-05-03  rocky <rb@dustyfeet.com>
 
 	* admin-tools/pyenv-older-versions,
-	uncompyle6/scanners/scanner37.py, uncompyle6/scanners/scanner38.py: 
+	uncompyle6/scanners/scanner37.py, uncompyle6/scanners/scanner38.py:
 	Administrivia
 
 2019-05-03  rocky <rb@dustyfeet.com>
@@ -6678,7 +6678,7 @@
 2019-05-01  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/01_fstring.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize36.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize36.py:
 	Better 3.6+ format specification handling
 
 2019-04-30  rocky <rb@dustyfeet.com>
@@ -6690,7 +6690,7 @@
 2019-04-30  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/01_fstring.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize36.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize36.py:
 	Hacky handling of 3.6 format string 'X'.
 
 2019-04-30  rocky <rb@dustyfeet.com>
@@ -6732,7 +6732,7 @@
 
 	* uncompyle6/semantics/customize25.py,
 	uncompyle6/semantics/customize26_27.py,
-	uncompyle6/semantics/pysource.py: Was mssing 2.5 cond3 semantic rule
+	uncompyle6/semantics/pysource.py: Was missing 2.5 cond3 semantic rule
 
 2019-04-23  rocky <rb@dustyfeet.com>
 
@@ -6758,7 +6758,7 @@
 2019-04-22  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/08_comp_gen_for.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize3.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize3.py:
 	Add rule for 3.x comp_for
 
 2019-04-19  rocky <rb@dustyfeet.com>
@@ -6794,7 +6794,7 @@
 2019-04-18  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/make_function.py,
-	uncompyle6/semantics/pysource.py: Hacky attemp to add more 3.x
+	uncompyle6/semantics/pysource.py: Hacky attempt to add more 3.x
 	annotate information in
 
 2019-04-17  rocky <rb@dustyfeet.com>
@@ -6815,7 +6815,7 @@
 
 2019-04-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse27.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse27.py, uncompyle6/semantics/pysource.py:
 	Improve Python 2.7 generator handling
 
 2019-04-15  rocky <rb@dustyfeet.com>
@@ -6868,7 +6868,7 @@
 
 2019-04-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py:
 	Add 3.8 try else
 
 2019-04-14  rocky <rb@dustyfeet.com>
@@ -6889,7 +6889,7 @@
 
 2019-04-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py:
 	Start 3.8 async for/else
 
 2019-04-14  rocky <rb@dustyfeet.com>
@@ -6916,12 +6916,12 @@
 
 2019-04-13  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py:
 	Adjust while True grammar rule
 
 2019-04-13  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py:
 	Adjust 3.8 while-stmt rules
 
 2019-04-13  rocky <rb@dustyfeet.com>
@@ -6933,7 +6933,7 @@
 
 2019-04-12  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse38.py, uncompyle6/semantics/customize3.py:
 	3.8 try/except handling - again (and more to come)
 
 2019-04-11  rocky <rb@dustyfeet.com>
@@ -6974,7 +6974,7 @@
 2019-04-10  rocky <rb@dustyfeet.com>
 
 	* Makefile, test/Makefile, uncompyle6/parsers/parse38.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize3.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize3.py:
 	Basic 3.8+ "for" loop handling...  More Makefile mangling
 
 2019-04-10  rocky <rb@dustyfeet.com>
@@ -6995,13 +6995,13 @@
 2019-04-10  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse38.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize3.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize3.py:
 	3.8 "for" block ...  pysource: Tag older semantics for blocks with "expr" and "for_block"
 
 2019-04-09  rocky <rb@dustyfeet.com>
 
 	* __pkginfo__.py, uncompyle6/scanners/scanner13.py,
-	uncompyle6/scanners/scanner14.py, uncompyle6/scanners/scanner38.py: 
+	uncompyle6/scanners/scanner14.py, uncompyle6/scanners/scanner38.py:
 	Small changes - bump required xdis version
 
 2019-04-05  rocky <rb@dustyfeet.com>
@@ -7020,7 +7020,7 @@
 2019-03-28  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse38.py, uncompyle6/scanner.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner38.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner38.py:
 	[WIP] - move forward a tad on Python 3.8
 
 2019-03-28  rocky <rb@dustyfeet.com>
@@ -7044,7 +7044,7 @@
 2019-03-23  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/01_if_and_if_bug.py,
-	uncompyle6/parsers/parse37.py, uncompyle6/semantics/customize3.py: 
+	uncompyle6/parsers/parse37.py, uncompyle6/semantics/customize3.py:
 	Adjust 3.7 chained compare for adjusted grammar Add test for last change
 
 2019-03-23  rocky <rb@dustyfeet.com>
@@ -7155,7 +7155,7 @@
 
 2019-01-05  Yiming Wang <wangym5106@gmail.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py:
 	Better assert and AssertionError determine for Python 2.7
 
 2019-01-05  rocky <rb@dustyfeet.com>
@@ -7195,7 +7195,7 @@
 
 2018-12-26  rocky <rb@dustyfeet.com>
 
-	* admin-tools/pyenv-newer-versions, uncompyle6/parsers/parse27.py: 
+	* admin-tools/pyenv-newer-versions, uncompyle6/parsers/parse27.py:
 	Use raw string in regexp with "\d"...  Bump python versions used in testing
 
 2018-12-25  rocky <rb@dustyfeet.com>
@@ -7205,7 +7205,7 @@
 
 2018-12-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py:
 	Python 3.6+ control flow
 
 2018-12-15  rocky <rb@dustyfeet.com>
@@ -7318,12 +7318,12 @@
 	uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner2.py,
 	uncompyle6/semantics/helper.py: Reinstat expr32 and expr1024
-	rules...  to speed up handling long literal lists. See also issue #188 Update issue forms to simplfy via putting instructions as comments.
+	rules...  to speed up handling long literal lists. See also issue #188 Update issue forms to simplify via putting instructions as comments.
 
 2018-09-19  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/main.py: decompile bytecode_version defaults to Python
-	intepreter version Fixes #189
+	interpreter version. Fixes #189
 
 2018-09-19  rocky <rb@dustyfeet.com>
 
@@ -7332,7 +7332,7 @@
 
 2018-08-12  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse24.py, uncompyle6/semantics/customize.py: 
+	* uncompyle6/parsers/parse24.py, uncompyle6/semantics/customize.py:
 	Handle Python 2.4 if true
 
 2018-08-02  rocky <rb@dustyfeet.com>
@@ -7342,8 +7342,8 @@
 2018-08-02  rocky <rb@dustyfeet.com>
 
 	* .github/ISSUE_TEMPLATE/bug-report.md,
-	.github/ISSUE_TEMPLATE/feature-request.md, requirements-dev.txt: 
-	Guidleines for reporting bugs and openning feature requests
+	.github/ISSUE_TEMPLATE/feature-request.md, requirements-dev.txt:
+	Guidleines for reporting bugs and opening feature requests
 
 2018-07-15  rocky <rb@dustyfeet.com>
 
@@ -7403,12 +7403,12 @@
 
 2018-06-24  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner30.py: 
+	* uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner30.py:
 	Remove some of the 3.0 3.x instruction hackiness
 
 2018-06-24  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py:
 	Python 3.0 comprehensions are a snowflake
 
 2018-06-24  rocky <rb@dustyfeet.com>
@@ -7438,12 +7438,12 @@
 2018-06-24  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug31/06_listcomp.py,
-	uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py:
 	Improve 3.0 list comprehensions
 
 2018-06-23  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py:
 	Fix Python 3.0 "and" parse rule
 
 2018-06-23  rocky <rb@dustyfeet.com>
@@ -7463,7 +7463,7 @@
 
 	* test/Makefile, test/simple_source/bug30/00_chained-compare.py,
 	uncompyle6/parsers/parse26.py, uncompyle6/parsers/parse30.py: Python
-	3.0 chained comparisions
+	3.0 chained comparisons
 
 2018-06-23  rocky <rb@dustyfeet.com>
 
@@ -7493,7 +7493,7 @@
 
 2018-06-22  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/customize3.py:
 	Fix two Python 3.0 bugs...  * don't add _[0] list comprehension variables * add POP_TOP in _ifstmts_jmp; c_stmst for now isn't optional
 
 2018-06-19  rocky <rb@dustyfeet.com>
@@ -7578,7 +7578,7 @@
 2018-06-12  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse30.py, uncompyle6/scanner.py,
-	uncompyle6/scanners/scanner3.py: More 3.0 bug fixing and tollerance
+	uncompyle6/scanners/scanner3.py: More 3.0 bug fixing and tolerance
 	and...  add some 1.4 bytecode tests
 
 2018-06-12  rocky <rb@dustyfeet.com>
@@ -7589,7 +7589,7 @@
 
 2018-06-12  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/scanners/scanner3.py:
 	Better "continue" detection on Python 3.0
 
 2018-06-11  rocky <rb@dustyfeet.com>
@@ -7620,12 +7620,12 @@
 
 2018-06-09  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py:
 	3.0 list comprehensions
 
 2018-06-09  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/semantics/pysource.py:
 	Python 3.0 set comprehensions
 
 2018-06-09  rocky <rb@dustyfeet.com>
@@ -7666,7 +7666,7 @@
 
 	* test/simple_source/bug14/01_print.py,
 	test/stdlib/compile-file.py, test/stdlib/compile_file_1x.py,
-	uncompyle6/parsers/parse14.py, uncompyle6/scanners/scanner14.py: 
+	uncompyle6/parsers/parse14.py, uncompyle6/scanners/scanner14.py:
 	Improve Python 1.4 bytecode coverage
 
 2018-06-04  rocky <rb@dustyfeet.com>
@@ -7721,7 +7721,7 @@
 	uncompyle6/scanner.py, uncompyle6/scanners/scanner14.py,
 	uncompyle6/scanners/scanner15.py, uncompyle6/scanners/scanner21.py,
 	uncompyle6/scanners/scanner22.py, uncompyle6/scanners/scanner23.py,
-	uncompyle6/scanners/scanner24.py, uncompyle6/scanners/scanner25.py: 
+	uncompyle6/scanners/scanner24.py, uncompyle6/scanners/scanner25.py:
 	Start Python 1.4 decompilation ...  Tidy up test code for issue 162 and comments for some disassembly
 	massaging.
 
@@ -7759,7 +7759,7 @@
 
 2018-05-08  rocky <rb@dustyfeet.com>
 
-	* test/simple_source/bug27+/05_try_else.py, test/stdlib/runtests.sh: 
+	* test/simple_source/bug27+/05_try_else.py, test/stdlib/runtests.sh:
 	Note we can't handle try/else sometimes in 2.7
 
 2018-05-08  rocky <rb@dustyfeet.com>
@@ -7806,7 +7806,7 @@
 
 	* test/simple_source/bug26/01_ifelse_listcomp.py,
 	uncompyle6/parsers/parse26.py, uncompyle6/parsers/parse27.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	2.6, 2.7 Parse if else inside list comprehension Fixes #171
 
 2018-04-28  rocky <rb@dustyfeet.com>
@@ -7829,7 +7829,7 @@
 	* test/simple_source/branching/02_ifelse_lambda.py,
 	uncompyle6/parsers/parse25.py, uncompyle6/parsers/parse26.py,
 	uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/consts.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/consts.py:
 	Handle if not else in lambdas...  Fixes #170
 
 2018-04-23  rocky <rb@dustyfeet.com>
@@ -7850,13 +7850,13 @@
 
 2018-04-21  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse35.py: Correct (3.7) use fof
+	* uncompyle6/parsers/parse35.py: Correct (3.7) use for
 	BUILD_MAP_UNPACK_WITH_CALL
 
 2018-04-20  rocky <rb@dustyfeet.com>
 
 	* Makefile, uncompyle6/parsers/parse36.py,
-	uncompyle6/semantics/customize3.py: Fix 3.7 aysnc def testing
+	uncompyle6/semantics/customize3.py: Fix 3.7 async def testing
 
 2018-04-19  rocky <rb@dustyfeet.com>
 
@@ -7876,7 +7876,7 @@
 
 2018-04-18  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py: 2.6 compatability
+	* uncompyle6/parsers/parse3.py: 2.6 compatibility
 
 2018-04-18  rocky <rb@dustyfeet.com>
 
@@ -7892,7 +7892,7 @@
 
 2018-04-16  rocky <rb@dustyfeet.com>
 
-	* admin-tools/pyenv-newer-versions, pytest/test_grammar.py: 
+	* admin-tools/pyenv-newer-versions, pytest/test_grammar.py:
 	Administrivia
 
 2018-04-16  rocky <rb@dustyfeet.com>
@@ -7997,7 +7997,7 @@
 2018-04-08  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug35/04_call_function.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Slightly Python 3.x handing of subclasses...  which are created via a call to create a subclass.  Should be more general though.
 
 2018-04-08  rocky <rb@dustyfeet.com>
@@ -8040,7 +8040,7 @@
 
 	* uncompyle6/semantics/customize3.py,
 	uncompyle6/semantics/pysource.py: Make sure we call 'expr' go set
-	precidence right
+	precedence right
 
 2018-04-06  rocky <rb@dustyfeet.com>
 
@@ -8088,7 +8088,7 @@
 
 	* uncompyle6/semantics/customize.py,
 	uncompyle6/semantics/make_function.py: 3.2-3.4 Functions
-	cals/defininitions yet again And we're still not out of the woods.
+	cals/definitions yet again And we're still not out of the woods.
 
 2018-04-03  rocky <rb@dustyfeet.com>
 
@@ -8108,7 +8108,7 @@
 	* Makefile, pytest/test_fjt.py, pytest/test_function_call.py,
 	pytest/test_grammar.py, pytest/test_single_compile.py,
 	uncompyle6/scanner.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py:
 	DRY scanner code more...  Expand 2.6 testing
 
 2018-04-03  rocky <rb@dustyfeet.com>
@@ -8120,7 +8120,7 @@
 
 	* pytest/test_fjt.py, uncompyle6/scanner.py,
 	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py,
-	uncompyle6/scanners/scanner27.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner27.py, uncompyle6/scanners/scanner3.py:
 	DRY instruction building code...  There is a little more that could be done with
 	self.offset2inst_index
 
@@ -8148,7 +8148,7 @@
 
 2018-04-01  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Handle 3.5+ BUILD_MAP_UNPACK used in dictionaries A number of weaknesses have been uncovered though
 
 2018-04-01  rocky <rb@dustyfeet.com>
@@ -8168,7 +8168,7 @@
 2018-03-31  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/10_argparse.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize.py:
 	3.6 argument parsing
 
 2018-03-31  rocky <rb@dustyfeet.com>
@@ -8194,7 +8194,7 @@
 
 	* uncompyle6/scanner.py, uncompyle6/scanners/scanner2.py,
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner30.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner30.py:
 	Replace all_instrs with inst_matches...  which works on 3.6+. Still should write a pytest for this.
 
 2018-03-29  rocky <rb@dustyfeet.com>
@@ -8246,7 +8246,7 @@
 2018-03-27  rocky <rocky@gnu.org>
 
 	* test/grammar-cover/.gitignore, test/grammar-cover/convert.sh,
-	test/grammar-cover/run-and-email.sh, test/stdlib/.gitignore: 
+	test/grammar-cover/run-and-email.sh, test/stdlib/.gitignore:
 	grammar-cover administrivia
 
 2018-03-27  rocky <rb@dustyfeet.com>
@@ -8289,7 +8289,7 @@
 
 2018-03-26  rocky <rb@dustyfeet.com>
 
-	* test/grammar-cover/README.md, test/grammar-cover/grammar.sh: 
+	* test/grammar-cover/README.md, test/grammar-cover/grammar.sh:
 	Grammar coverage hacking
 
 2018-03-26  rocky <rb@dustyfeet.com>
@@ -8328,7 +8328,7 @@
 
 2018-03-26  rocky <rb@dustyfeet.com>
 
-	* test/grammar-cover/convert.sh, test/grammar-cover/grammar24.sh: 
+	* test/grammar-cover/convert.sh, test/grammar-cover/grammar24.sh:
 	Start grammar coverage testing
 
 2018-03-26  rocky <rb@dustyfeet.com>
@@ -8344,7 +8344,7 @@
 2018-03-26  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug35/04_call_function.py,
-	uncompyle6/semantics/customize.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/customize.py, uncompyle6/semantics/pysource.py:
 	Bang on 3.4 CALL_FUNCTION_VAR
 
 2018-03-25  rocky <rb@dustyfeet.com>
@@ -8358,7 +8358,7 @@
 2018-03-25  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug35/04_call_function.py,
-	uncompyle6/parsers/parse35.py, uncompyle6/semantics/customize.py: 
+	uncompyle6/parsers/parse35.py, uncompyle6/semantics/customize.py:
 	3.5 *() arg without further args
 
 2018-03-25  R. Bernstein <rocky@users.noreply.github.com>
@@ -8410,7 +8410,7 @@
 2018-03-24  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug35/04_call_function.py,
-	uncompyle6/semantics/customize.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/customize.py, uncompyle6/semantics/pysource.py:
 	Towards handling 3.x' CALL_FUNCTION_VAR correctly
 
 2018-03-24  rocky <rb@dustyfeet.com>
@@ -8430,17 +8430,17 @@
 2018-03-22  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/04_try_finally.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize.py:
 	3.6 try except-as bug
 
 2018-03-22  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/customize.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/customize.py:
 	Localize call_kw precedence to 3.6
 
 2018-03-22  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py:
 	Isolate some 3.x dictcomp grammar rules
 
 2018-03-21  rocky <rb@dustyfeet.com>
@@ -8460,7 +8460,7 @@
 	* test/simple_source/bug36/01_fstring.py,
 	test/simple_source/bug36/02_kwargs.py,
 	uncompyle6/semantics/consts.py, uncompyle6/semantics/customize.py: A
-	couple of 3.6 bugs...  remove parens around decorators by adjusting precidence Partial
+	couple of 3.6 bugs...  remove parens around decorators by adjusting precedence Partial
 	handling of quotes within 3.6 format strings
 
 2018-03-21  rocky <rb@dustyfeet.com>
@@ -8616,7 +8616,7 @@
 
 2018-03-08  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner2.py:
 	Slightly better assert detection
 
 2018-03-08  rocky <rb@dustyfeet.com>
@@ -8728,28 +8728,28 @@
 2018-03-06  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse26.py: 2.6- CONTINUE/JUMP_BACK confusion
-	workaroud
+	workaround
 
 2018-03-05  rocky <rb@dustyfeet.com>
 
-	* admin-tools/run-pyenvlib-test-all.sh, admin-tools/setup-master.sh: 
+	* admin-tools/run-pyenvlib-test-all.sh, admin-tools/setup-master.sh:
 	Administrivia...  - Add script to run test_pyenvlib.py on everything - Bump 3.6 version 3.6.4
 
 2018-03-05  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/stmts/01_rel_import.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/semantics/pysource.py:
 	Small changes...  pysource.py: Bug fix for relative imports.  scanner2.py: Remove a debug expression
 
 2018-03-05  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse22.py: Python 2.2 code anomoly? Python 2.2 may generate PRINT_ITEM_CONT in some places for
+	* uncompyle6/parsers/parse22.py: Python 2.2 code anomaly? Python 2.2 may generate PRINT_ITEM_CONT in some places for
 	PRINT_ITEM
 
 2018-03-05  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Need to back off set_comp change a little...  There was set_comp already. So what had been setcomp_func is now
 	merely set_comp_func rather than set_comp. Small improvement but in
 	the right direction, still
@@ -8758,15 +8758,15 @@
 
 	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	dictcomp_func -> dict_comp_func...  to match AST better. Also adds a correction in last commit,
-	including set_comp -> set_comp_expr where apprpriate Note: can't use dict_comp as that was already used.  But
+	including set_comp -> set_comp_expr where appropriate Note: can't use dict_comp as that was already used.  But
 	dict_comp_func is matches AST better than dictcomp_func
 
 2018-03-05  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	setcomp_func -> set_comp ...  to match AST name more closely
 
 2018-03-05  rocky <rb@dustyfeet.com>
@@ -8821,7 +8821,7 @@
 
 2018-03-04  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize.py:
 	Prevent 3.6 call_kw deriving itself..  Was causing some calls to be parsed incorrectly
 
 2018-03-04  rocky <rb@dustyfeet.com>
@@ -8874,7 +8874,7 @@
 
 2018-03-01  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py:
 	Better "continue" detection for 2.7
 
 2018-03-01  rocky <rb@dustyfeet.com>
@@ -8929,7 +8929,7 @@
 	* pytest/test_grammar.py, pytest/testdata/if-2.7.right,
 	pytest/testdata/ifelse-2.7.right, uncompyle6/scanners/scanner2.py,
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/scanners/tok.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/tok.py, uncompyle6/semantics/pysource.py:
 	Fallout from more precise token attributes
 
 2018-02-28  rocky <rb@dustyfeet.com>
@@ -8960,7 +8960,7 @@
 
 2018-02-27  rocky <rb@dustyfeet.com>
 
-	* HISTORY.md, uncompyle6/main.py, uncompyle6/semantics/fragments.py: 
+	* HISTORY.md, uncompyle6/main.py, uncompyle6/semantics/fragments.py:
 	Start simplifying higher-level API
 
 2018-02-27  rocky <rb@dustyfeet.com>
@@ -8975,14 +8975,14 @@
 
 2018-02-27  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	Revise comprehension walking in 3.x...  less rigidly and with less magic and more verbiage as to what's
 	going on
 
 2018-02-27  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/04_try_finally.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/customize.py:
 	3.6+ try/finally bugs Another day another 3.6 bug fix attempted
 
 2018-02-27  rocky <rb@dustyfeet.com>
@@ -9005,7 +9005,7 @@
 2018-02-26  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/05_call_star_kw.py, uncompyle6/main.py,
-	uncompyle6/semantics/make_function.py: 3.6 MAKE_FUNCTION workarounds Still wrong, but points to diretions for improvements
+	uncompyle6/semantics/make_function.py: 3.6 MAKE_FUNCTION workarounds Still wrong, but points to directions for improvements
 
 2018-02-26  rocky <rb@dustyfeet.com>
 
@@ -9141,7 +9141,7 @@
 
 	* test/simple_source/bug27+/03_not_dead_code.py,
 	test/stdlib/runtests.sh, uncompyle6/parsers/parse27.py: Refine 2.7
-	dead code test ..  in a hacky way. Will probalby have to expand this in the future or
+	dead code test ..  in a hacky way. Will probably have to expand this in the future or
 	better do dead code analysis
 
 2018-02-18  rocky <rb@dustyfeet.com>
@@ -9160,13 +9160,13 @@
 
 2018-02-17  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner2.py: 
-	Beter 2.7 end_if and COME_FROM determination Fixes #149 ... Add more tests too
+	* uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner2.py:
+	Better 2.7 end_if and COME_FROM determination Fixes #149 ... Add more tests too
 
 2018-02-15  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/fragments.py,
-	uncompyle6/semantics/pysource.py: Wierd comprehension bug seen via
+	uncompyle6/semantics/pysource.py: Weird comprehension bug seen via
 	new loctraceback
 
 2018-02-15  rocky <rb@dustyfeet.com>
@@ -9209,7 +9209,7 @@
 
 	* test/simple_source/bug35/03_double_star_unpack.py,
 	uncompyle6/semantics/customize.py: Start to handle 3.5+
-	BUILD_LIST_UNPACK in call ..  to implement multple star arguments
+	BUILD_LIST_UNPACK in call ..  to implement multiple star arguments
 
 2018-02-08  rocky <rb@dustyfeet.com>
 
@@ -9231,7 +9231,7 @@
 
 2018-02-04  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner2.py:
 	Revert most of last change
 
 2018-02-04  rocky <rb@dustyfeet.com>
@@ -9253,7 +9253,7 @@
 
 2018-02-03  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/fragments.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/fragments.py:
 	Clean up fragments code for "for"...  And make a little more precise.  tag "store" part of "for" in
 	consts.
 
@@ -9365,7 +9365,7 @@
 
 2018-01-27  rocky <rb@dustyfeet.com>
 
-	* NEWS, admin-tools/how-to-make-a-release.md, uncompyle6/version.py: 
+	* NEWS, admin-tools/how-to-make-a-release.md, uncompyle6/version.py:
 	Get ready for release 2.15.0
 
 2018-01-27  rocky <rb@dustyfeet.com>
@@ -9379,12 +9379,12 @@
 2018-01-27  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/customize.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	DRY fragments by using OO more effectively Split grammar customization to its own file. It's quite large now.
 
 2018-01-27  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/linemap.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/linemap.py, uncompyle6/semantics/pysource.py:
 	More linestart hacking.  Not very successful though
 
 2018-01-26  rocky <rb@dustyfeet.com>
@@ -9417,7 +9417,7 @@
 2018-01-24  rocky <rb@dustyfeet.com>
 
 	* pytest/test_disasm.py, uncompyle6/disas.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/linemap.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/linemap.py:
 	Add deparse_code_with_fragments_and_map and simplify
 
 2018-01-23  rocky <rb@dustyfeet.com>
@@ -9449,7 +9449,7 @@
 2018-01-22  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug27+/02_ifelsetmtl.py, uncompyle6/main.py,
-	uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner27.py: 
+	uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner27.py:
 	JUMP_BACK and CONTINUE need to be treated more similar...  fixes 148
 
 2018-01-22  rocky <rb@dustyfeet.com>
@@ -9516,7 +9516,7 @@
 2018-01-18  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/__init__.py, uncompyle6/scanner.py: Handle 3.5.2..3.5.2
-	magic...  And handle magic better overal by improved xdis use
+	magic...  And handle magic better overall by improved xdis use
 
 2018-01-13  rocky <rb@dustyfeet.com>
 
@@ -9668,7 +9668,7 @@
 2018-01-08  rocky <rb@dustyfeet.com>
 
 	* pytest/test_fjt.py, test/simple_source/bug35/05_empty_ifs.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner36.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner36.py:
 	Fix 3.5+ bug in if's with pass bodies Fixes #104 in a somewhat hacky way.
 
 2018-01-07  rocky <rb@dustyfeet.com>
@@ -9707,7 +9707,7 @@
 
 2018-01-06  rocky <rb@dustyfeet.com>
 
-	* pytest/testdata/if-2.7.right, pytest/testdata/ifelse-2.7.right: 
+	* pytest/testdata/if-2.7.right, pytest/testdata/ifelse-2.7.right:
 	Change disassembly to make offsets in COME_FROMs
 
 2018-01-06  rocky <rb@dustyfeet.com>
@@ -9718,7 +9718,7 @@
 
 	* test/stdlib/runtests.sh, uncompyle6/parsers/parse24.py,
 	uncompyle6/parsers/parse25.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py:
 	Fix bug in 2.5- try/else inside ifelsestmt
 
 2017-12-15  rocky <rb@dustyfeet.com>
@@ -9734,12 +9734,12 @@
 
 2017-12-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py:
 	3.6 FUNCTION_EX_KW fixes
 
 2017-12-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py:
 	Grammar rule for 3.6 with .. return
 
 2017-12-15  rocky <rb@dustyfeet.com>
@@ -9796,7 +9796,7 @@
 	uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse30.py, uncompyle6/parsers/parse35.py,
 	uncompyle6/parsers/parse36.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	NT return_stmt -> return to match AST
 
 2017-12-14  R. Bernstein <rocky@users.noreply.github.com>
@@ -9813,7 +9813,7 @@
 
 2017-12-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Start handling 3.6 CALL_FUNCTION_KW
 
 2017-12-14  rocky <rb@dustyfeet.com>
@@ -9842,12 +9842,12 @@
 
 2017-12-13  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner2.py:
 	Back off of previous refactor a little bit
 
 2017-12-13  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner2.py:
 	Simplify scanner2 so it relies less on custimize dict
 
 2017-12-13  rocky <rb@dustyfeet.com>
@@ -9943,7 +9943,7 @@
 2017-12-12  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py,
-	uncompyle6/scanners/scanner36.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner36.py, uncompyle6/semantics/pysource.py:
 	Bang on 3.6 CALL_FUNCTION(_VAR)_KW
 
 2017-12-12  rocky <rb@dustyfeet.com>
@@ -9956,7 +9956,7 @@
 
 2017-12-12  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py:
 	Bang on BUILD_MAP_UNPACK_WITH_CALL a little...  more cases are needed still. And there's a bug in
 	BUILD_TUPLE_UNPACK_WITH_CALL now in adding the count twice.
 
@@ -9984,7 +9984,7 @@
 	* admin-tools/how-to-make-a-release.md,
 	uncompyle6/parsers/parse25.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse31.py, uncompyle6/parsers/parse36.py,
-	uncompyle6/scanners/scanner36.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner36.py, uncompyle6/semantics/pysource.py:
 	Start to handle CALL_FUNCTION_EX more accurately
 
 2017-12-10  rocky <rb@dustyfeet.com>
@@ -10022,7 +10022,7 @@
 
 2017-12-07  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/consts.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/consts.py:
 	Reinstate kwargs1...  was just missing the semantic action rule for it
 
 2017-12-07  rocky <rb@dustyfeet.com>
@@ -10038,7 +10038,7 @@
 
 	* pytest/test_grammar.py, uncompyle6/parser.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/parsers/parse35.py, uncompyle6/parsers/parse36.py: 
+	uncompyle6/parsers/parse35.py, uncompyle6/parsers/parse36.py:
 	grammar isolation and reduction
 
 2017-12-07  rocky <rb@dustyfeet.com>
@@ -10076,7 +10076,7 @@
 
 	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse26.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/semantics/check_ast.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/fragments.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/fragments.py:
 	NT break_stmt, continue_stmt -> break, continue...  to match AST
 
 2017-12-06  rocky <rb@dustyfeet.com>
@@ -10097,7 +10097,7 @@
 
 2017-12-05  rocky <rb@dustyfeet.com>
 
-	* test/stdlib/runtests.sh: runtest.sh: remove from exlusion stdlib
+	* test/stdlib/runtests.sh: runtest.sh: remove from exclusion stdlib
 	test that now work
 
 2017-12-05  rocky <rb@dustyfeet.com>
@@ -10151,7 +10151,7 @@
 2017-12-04  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug26/03_weird26.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	Slightly better 3.x list comprehension handling
 
 2017-12-04  rocky <rb@dustyfeet.com>
@@ -10175,15 +10175,15 @@
 
 2017-12-03  rocky <rb@dustyfeet.com>
 
-	* test/simple_source/bug26/03_weird26.py, test/stdlib/runtests.sh: 
+	* test/simple_source/bug26/03_weird26.py, test/stdlib/runtests.sh:
 	More weirdness testing
 
 2017-12-03  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug26/{03_weird.py => 03_weird26.py},
 	test/stdlib/runtests.sh, uncompyle6/parsers/parse26.py,
-	uncompyle6/parsers/parse27.py, uncompyle6/semantics/consts.py: 
-	Handle a wierd 2.6 conditional false expression...  from 2.6. test_grammar
+	uncompyle6/parsers/parse27.py, uncompyle6/semantics/consts.py:
+	Handle a weird 2.6 conditional false expression...  from 2.6. test_grammar
 
 2017-12-03  rocky <rb@dustyfeet.com>
 
@@ -10195,7 +10195,7 @@
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse23.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	NT: load_attr -> attribute to match AST
 
 2017-12-03  rocky <rb@dustyfeet.com>
@@ -10235,7 +10235,7 @@
 	* uncompyle6/parser.py, uncompyle6/parsers/parse25.py,
 	uncompyle6/parsers/parse26.py, uncompyle6/parsers/parse27.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse30.py,
-	uncompyle6/parsers/parse32.py, uncompyle6/scanners/scanner2.py: 
+	uncompyle6/parsers/parse32.py, uncompyle6/scanners/scanner2.py:
 	Grammar "COME_FROM"_from cleanups ...  tryelse constructs in 2.x fixed up _come_from -> _come_froms
 	(COME_FROM*) consolidate come_froms rule into sincle parser.py
 
@@ -10262,7 +10262,7 @@
 	uncompyle6/parsers/parse26.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse32.py, uncompyle6/parsers/parse33.py,
 	uncompyle6/parsers/parse36.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	NT trystmt -> try_except to match AST
 
 2017-12-02  rocky <rb@dustyfeet.com>
@@ -10273,7 +10273,7 @@
 2017-12-02  rocky <rb@dustyfeet.com>
 
 	* test/Makefile, test/simple_source/stmts/00_docstring.py,
-	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py:
 	Fix docstring bug..  small sync with python 2.4 branch
 
 2017-12-02  rocky <rb@dustyfeet.com>
@@ -10317,7 +10317,7 @@
 
 2017-12-02  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner2.py:
 	Small grammar isolation bugs
 
 2017-12-02  rocky <rb@dustyfeet.com>
@@ -10328,7 +10328,7 @@
 
 	* test/simple_source/stmts/02_test_exec.py, uncompyle6/parser.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse35.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py:
 	2.7 exec stmt grammar rule isolation/reduction
 
 2017-12-02  rocky <rb@dustyfeet.com>
@@ -10338,7 +10338,7 @@
 
 2017-12-02  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse32.py, uncompyle6/parsers/parse35.py: 
+	* uncompyle6/parsers/parse32.py, uncompyle6/parsers/parse35.py:
 	whileTrue grammar reduction
 
 2017-12-02  rocky <rb@dustyfeet.com>
@@ -10358,12 +10358,12 @@
 
 2017-12-01  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py:
 	Isolate and reduce 3.x conditionals and lambda rules
 
 2017-12-01  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse35.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse35.py:
 	opt_come_from_loop -> come_from_loops...  ANd remove unused rules associated with COME_FROM_FINALLY
 
 2017-12-01  rocky <rb@dustyfeet.com>
@@ -10420,7 +10420,7 @@
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	NT mapexpr -> dict to match AST
 
 2017-11-30  rocky <rb@dustyfeet.com>
@@ -10466,7 +10466,7 @@
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	NT setcomp -> set_comp to match AST
 
 2017-11-29  rocky <rb@dustyfeet.com>
@@ -10475,7 +10475,7 @@
 	uncompyle6/parsers/parse23.py, uncompyle6/parsers/parse26.py,
 	uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse32.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	list_compr -> list_comp to match AST...  more Python 3 custom rule cleanup
 
 2017-11-29  rocky <rb@dustyfeet.com>
@@ -10504,7 +10504,7 @@
 2017-11-29  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug30/01_ops.py,
-	test/simple_source/stmts/00_import.py, uncompyle6/parsers/parse3.py: 
+	test/simple_source/stmts/00_import.py, uncompyle6/parsers/parse3.py:
 	Better grammar coverage; reduce 3.x mklambda rules
 
 2017-11-29  rocky <rb@dustyfeet.com>
@@ -10514,7 +10514,7 @@
 	test/simple_source/stmts/01_augmented_assign.py,
 	uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/semantics/check_ast.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/fragments.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/fragments.py:
 	NT augassign -> aug_assign to match AST
 
 2017-11-29  rocky <rb@dustyfeet.com>
@@ -10579,7 +10579,7 @@
 	uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse30.py,
 	uncompyle6/parsers/parse31.py, uncompyle6/parsers/parse35.py,
 	uncompyle6/parsers/parse36.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	NT designatore -> store to match AST
 
 2017-11-29  rocky <rb@dustyfeet.com>
@@ -10596,7 +10596,7 @@
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse25.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse35.py,
 	uncompyle6/parsers/parse36.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	NT call_function -> call to match AST
 
 2017-11-28  rocky <rb@dustyfeet.com>
@@ -10669,7 +10669,7 @@
 
 	* __pkginfo__.py,
 	test/simple_source/bug25/01_inplace_true_divide.py,
-	uncompyle6/parser.py, uncompyle6/parsers/parse25.py: Mege hell
+	uncompyle6/parser.py, uncompyle6/parsers/parse25.py: Merge hell
 
 2017-11-27  rocky <rb@dustyfeet.com>
 
@@ -10705,7 +10705,7 @@
 2017-11-27  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
-	uncompyle6/parsers/parse23.py, uncompyle6/parsers/parse27.py: 
+	uncompyle6/parsers/parse23.py, uncompyle6/parsers/parse27.py:
 	Grammar isolation
 
 2017-11-27  rocky <rb@dustyfeet.com>
@@ -10728,7 +10728,7 @@
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse26.py, uncompyle6/parsers/parse27.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner2.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner2.py:
 	Grammar reduction
 
 2017-11-26  rocky <rb@dustyfeet.com>
@@ -10748,7 +10748,7 @@
 
 2017-11-26  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py:
 	localize Python2 ifelsetmtr, compare_chained: 2.7
 
 2017-11-26  rocky <rb@dustyfeet.com>
@@ -10841,7 +10841,7 @@
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py,
 	uncompyle6/semantics/pysource.py: localize 2 and 3 argument
-	BUILD_SLICE...  Nontermninal name matches AST anme now. Add test.
+	BUILD_SLICE...  Nontermninal name matches AST name now. Add test.
 
 2017-11-25  rocky <rb@dustyfeet.com>
 
@@ -10924,7 +10924,7 @@
 
 2017-11-23  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse32.py, uncompyle6/parsers/parse33.py: 
+	* uncompyle6/parsers/parse32.py, uncompyle6/parsers/parse33.py:
 	Improve try else in 3.2...  Grammar from 3.3 is relevant here
 
 2017-11-23  rocky <rb@dustyfeet.com>
@@ -10941,7 +10941,7 @@
 2017-11-23  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse26.py,
-	uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse34.py: 
+	uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse34.py:
 	grammar reduction of while loops
 
 2017-11-23  rocky <rb@dustyfeet.com>
@@ -10978,17 +10978,17 @@
 2017-11-22  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py: Reduce
-	unecessary grammar rules in 2.x
+	unnecessary grammar rules in 2.x
 
 2017-11-22  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/stmts/01_augmented_assign.py,
-	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py: 
+	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py:
 	Increase grammar coverage
 
 2017-11-22  rocky <rb@dustyfeet.com>
 
-	* admin-tools/setup-master.sh, admin-tools/setup-python-2.4.sh: 
+	* admin-tools/setup-master.sh, admin-tools/setup-python-2.4.sh:
 	Administrivia: add "git pull"s
 
 2017-11-18  rocky <rb@dustyfeet.com>
@@ -10999,7 +10999,7 @@
 2017-11-18  rocky <rb@dustyfeet.com>
 
 	* pytest/test_grammar.py, uncompyle6/parser.py,
-	uncompyle6/parsers/parse24.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse24.py, uncompyle6/semantics/pysource.py:
 	Grammar cleanup: import_as_cont -> import_as
 
 2017-11-18  rocky <rb@dustyfeet.com>
@@ -11013,7 +11013,7 @@
 
 2017-11-17  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse33.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse33.py:
 	Python 3 grammar clean up and reorganization
 
 2017-11-17  rocky <rb@dustyfeet.com>
@@ -11050,7 +11050,7 @@
 
 2017-11-16  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse25.py, uncompyle6/parsers/parse3.py: 
+	* uncompyle6/parsers/parse25.py, uncompyle6/parsers/parse3.py:
 	Isolate "assert2" rule
 
 2017-11-16  rocky <rb@dustyfeet.com>
@@ -11081,11 +11081,11 @@
 2017-11-15  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py: More
-	2.7/2.7- grammer separation & cleanup
+	2.7/2.7- grammar separation & cleanup
 
 2017-11-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py:
 	Grammar cleanup: separate some 2.7 from 2.7- rules
 
 2017-11-15  rocky <rb@dustyfeet.com>
@@ -11127,7 +11127,7 @@
 
 	* test/Makefile, test/simple_source/stmts/10_del.py,
 	test/test_pyenvlib.py, uncompyle6/parsers/parse26.py,
-	uncompyle6/semantics/check_ast.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/check_ast.py, uncompyle6/semantics/pysource.py:
 	Profiling workarounds, more coverage ...  test/Makefile: more grammar checking. Update python versions
 	10_del.pyc add test of DEL_GLOBAL check_ast.py, pysource.py: Profileing workarounds
 
@@ -11145,7 +11145,7 @@
 
 2017-11-13  rocky <rb@dustyfeet.com>
 
-	* ChangeLog, uncompyle6/parser.py, uncompyle6/semantics/pysource.py: 
+	* ChangeLog, uncompyle6/parser.py, uncompyle6/semantics/pysource.py:
 	detected old-style Python 2.4 class better
 
 2017-11-13  rocky <rb@dustyfeet.com>
@@ -11175,7 +11175,7 @@
 
 2017-11-09  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py:
 	Fix bug in return-optimized try stmt
 
 2017-11-09  rocky <rb@dustyfeet.com>
@@ -11305,7 +11305,7 @@
 2017-10-29  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug36/10_extended_arg_loop.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py:
 	Python 3.6 control flow bug...  Much more is needed, but it's a start
 
 2017-10-29  rocky <rb@dustyfeet.com>
@@ -11316,9 +11316,9 @@
 2017-10-29  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/scanner.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner30.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner30.py:
 	Python 3.6-inspired instruction size cleanup Revise and generalize for Python 3.6+ instructions vs < 3.6
-	instuctions.  Used more of the generalized methods in xdis and
+	instructions.  Used more of the generalized methods in xdis and
 	remove some (but not all) of the magic numbers.  This is a lot of changes, but not all of the refactoring needed.
 	Much crap still remains. Also, there are still bugs in handling 3.6
 	bytecodes.
@@ -11342,7 +11342,7 @@
 
 	* pytest/test_pysource.py, uncompyle6/parser.py,
 	uncompyle6/parsers/parse24.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Start allowing node names in template engine These are now used to assert we have the right node type.  Simplify import_from
 
 2017-10-13  rocky <rb@dustyfeet.com>
@@ -11351,7 +11351,7 @@
 
 2017-10-12  rocky <rb@dustyfeet.com>
 
-	* admin-tools/make-dist-newer.sh, admin-tools/make-dist-older.sh: 
+	* admin-tools/make-dist-newer.sh, admin-tools/make-dist-older.sh:
 	Administrivia - generalize shell code
 
 2017-10-12  rocky <rb@dustyfeet.com>
@@ -11364,7 +11364,7 @@
 
 2017-10-12  rocky <rb@dustyfeet.com>
 
-	* admin-tools/make-dist-newer.sh, admin-tools/make-dist-older.sh: 
+	* admin-tools/make-dist-newer.sh, admin-tools/make-dist-older.sh:
 	Administrivia
 
 2017-10-12  rocky <rb@dustyfeet.com>
@@ -11393,7 +11393,7 @@
 	* admin-tools/check-newer-versions.sh,
 	admin-tools/check-older-versions.sh,
 	admin-tools/how-to-make-a-release.txt,
-	admin-tools/make-dist-newer.sh, admin-tools/make-dist-older.sh: 
+	admin-tools/make-dist-newer.sh, admin-tools/make-dist-older.sh:
 	Adminstrivia
 
 2017-10-11  rocky <rb@dustyfeet.com>
@@ -11428,7 +11428,7 @@
 
 	* HOW-TO-REPORT-A-BUG.md, test/Makefile, uncompyle6/parser.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	Improve parse trace. lambda fixes yet again
 
 2017-10-10  rocky <rb@dustyfeet.com>
@@ -11438,7 +11438,7 @@
 
 2017-10-10  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse24.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse24.py, uncompyle6/scanners/scanner3.py:
 	Misc bugs
 
 2017-10-10  R. Bernstein <rocky@users.noreply.github.com>
@@ -11461,7 +11461,7 @@
 	uncompyle6/semantics/make_function.py,
 	uncompyle6/semantics/pysource.py, uncompyle6/verify.py,
 	uncompyle6/version.py: Adjust for spark-parser 2.7.0
-	incompatabilities
+	incompatibilities
 
 2017-10-05  rocky <rb@dustyfeet.com>
 
@@ -11494,7 +11494,7 @@
 
 2017-10-02  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py:
 	spark-parser induced changes...  reduce rules can be called without token streams.
 
 2017-09-30  rocky <rb@dustyfeet.com>
@@ -11518,7 +11518,7 @@
 
 2017-09-26  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py: Pyton 3.1 Annotation args can be
+	* uncompyle6/parsers/parse3.py: Python 3.1 Annotation args can be
 	unicode?
 
 2017-09-25  rocky <rb@dustyfeet.com>
@@ -11532,7 +11532,7 @@
 2017-09-21  rocky <rb@dustyfeet.com>
 
 	* pytest/test_pysource.py, uncompyle6/semantics/consts.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Unit test for format-specifiers And in the process we catch some small bugs
 
 2017-09-20  rocky <rb@dustyfeet.com>
@@ -11554,7 +11554,7 @@
 
 2017-09-20  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/semantics/consts.py, uncompyle6/semantics/pysource.py:
 	More small doc changes
 
 2017-09-20  rocky <rb@dustyfeet.com>
@@ -11631,7 +11631,7 @@
 
 2017-08-13  rocky <rb@dustyfeet.com>
 
-	* pytest/test_basic.py, uncompyle6/parser.py, uncompyle6/scanner.py: 
+	* pytest/test_basic.py, uncompyle6/parser.py, uncompyle6/scanner.py:
 	Allow 3-part version string lookups, e.g 2.7.1 We allow a float here, but if passed a string like '2.7'. or
 	'2.7.13', accept that in looking up either a scanner or a parser.
 
@@ -11657,7 +11657,7 @@
 2017-07-17  rocky <rb@dustyfeet.com>
 
 	* __pkginfo__.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner30.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner30.py:
 	xdis's "exception match" is now "exception-match"
 
 2017-07-15  rocky <rb@dustyfeet.com>
@@ -11682,7 +11682,7 @@
 
 2017-07-09  rocky <rb@dustyfeet.com>
 
-	* ChangeLog, HOW-TO-REPORT-A-BUG.md, NEWS, uncompyle6/version.py: 
+	* ChangeLog, HOW-TO-REPORT-A-BUG.md, NEWS, uncompyle6/version.py:
 	Get ready for release 2.11.2
 
 2017-07-08  rocky <rb@dustyfeet.com>
@@ -11697,7 +11697,7 @@
 	* test/test_pyenvlib.py, uncompyle6/scanners/pypy32.py,
 	uncompyle6/scanners/pypy35.py, uncompyle6/scanners/scanner15.py,
 	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py,
-	uncompyle6/scanners/scanner35.py, uncompyle6/scanners/scanner36.py: 
+	uncompyle6/scanners/scanner35.py, uncompyle6/scanners/scanner36.py:
 	Start supporting Pypy 3.5 (5.7.1-beta)
 
 2017-07-05  rocky <rb@dustyfeet.com>
@@ -11714,13 +11714,13 @@
 2017-06-28  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/make_function.py: A guard against badly
-	formated bytecode
+	formatted bytecode
 
 2017-06-25  rocky <rb@dustyfeet.com>
 
 	* ChangeLog, NEWS, test/simple_source/bug31/04_def_annotate.py,
 	uncompyle6/semantics/make_function.py,
-	uncompyle6/semantics/pysource.py: 3.x funciton and annotation bug
+	uncompyle6/semantics/pysource.py: 3.x function and annotation bug
 	fixes
 
 2017-06-25  rocky <rb@dustyfeet.com>
@@ -11731,7 +11731,7 @@
 
 	* __pkginfo__.py, uncompyle6/scanner.py,
 	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/scanners/scanner30.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner30.py, uncompyle6/semantics/pysource.py:
 	Use xdis' instruction offset calculation fns..  next_offset, op_size, has_argument
 
 2017-06-19  rocky <rb@dustyfeet.com>
@@ -11798,7 +11798,7 @@
 2017-06-08  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/make_function.py: Correct make_function3 for
-	Pytohn 3.2
+	Python 3.2
 
 2017-06-08  rocky <rb@dustyfeet.com>
 
@@ -11812,7 +11812,7 @@
 
 2017-06-06  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/fragments.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/fragments.py:
 	Remove hacky fragments try fixup...  hacky call_function code is also not needed or will be reinstated
 	properly. Better grammar structure for Python 3.6 call_function.
 
@@ -11820,7 +11820,7 @@
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py,
 	uncompyle6/scanners/scanner36.py: BUILD_{MAP,TUPLE}_UNPACK &
-	CALL_FUNCTION_EX_KW...  Bang on these in 3.6. Not totally succesfull right now.  In fact a
+	CALL_FUNCTION_EX_KW...  Bang on these in 3.6. Not totally successful right now.  In fact a
 	regression on one of the test cases
 
 2017-06-05  rocky <rb@dustyfeet.com>
@@ -11831,7 +11831,7 @@
 
 2017-06-04  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Python 3.5 *args with kwargs handling.  3.5 is a snowflake here. Thank you, Python.  Fully fixes Issue 95.  3.6 is broken on this source, but for a *different* reason. Sigh.
 
 2017-06-03  rocky <rb@dustyfeet.com>
@@ -11883,7 +11883,7 @@
 
 2017-05-23  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/pysource.py: Fix up retreiving "async"
+	* uncompyle6/semantics/pysource.py: Fix up retrieving "async"
 	property on 3.6
 
 2017-05-23  rocky <rb@dustyfeet.com>
@@ -11910,7 +11910,7 @@
 
 2017-05-20  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	More explicit about 3.5 UNMAP_PACK Have to reduce 3.5 bytecode testing for now, code is more solid.
 
 2017-05-19  rocky <rb@dustyfeet.com>
@@ -11943,7 +11943,7 @@
 
 2017-05-19  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner3.py:
 	EXTENDED_ARG handling...  get_target() wasn't taking into account EXTENDED_ARG before opcode.  This is mostly relevant in Python 3.6 where the max size before
 	needing EXTENDED_ARG has been reduced to 256, but theoretically
 	possible in earlier versions.
@@ -11973,7 +11973,7 @@
 
 2017-05-16  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py:
 	Allow LOAD_CONST EXTENDED_ARG
 
 2017-05-15  rocky <rb@dustyfeet.com>
@@ -12011,7 +12011,7 @@
 2017-05-13  rocky <rb@dustyfeet.com>
 
 	* README.rst, uncompyle6/parsers/parse3.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py:
 	Bang on 3.6 MAKE_FUNCTION a bit more parse3.py, parse36.py: adding return_closure rule tags what's going
 	on with this rule pysource.py: start changing semantic rules to support code changed
 	by new make_function semantics README.rst: typo
@@ -12054,7 +12054,7 @@
 
 	* pytest/test_CALL_FUNCTION_KW.sh, pytest/test_function_call.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py,
-	uncompyle6/scanners/scanner36.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner36.py, uncompyle6/semantics/pysource.py:
 	Added support for support for Python 3.6 CALL_FUNCTION_KW
 
 2017-05-08  rocky <rb@dustyfeet.com>
@@ -12084,7 +12084,7 @@
 
 2017-05-07  rocky <rb@dustyfeet.com>
 
-	* test/Makefile: --weak-verify on 3.3 with inclusion of last commit Note that the result is sematically equivalent, so it is is correct.
+	* test/Makefile: --weak-verify on 3.3 with inclusion of last commit Note that the result is semantically equivalent, so it is is correct.
 
 2017-05-07  rocky <rb@dustyfeet.com>
 
@@ -12121,7 +12121,7 @@
 
 2017-05-05  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse32.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse32.py, uncompyle6/scanners/scanner3.py:
 	Improve Python 3.2 decompilation ...  by removing a lot of the control-flow labels of 3.3+
 
 2017-05-05  rocky <rb@dustyfeet.com>
@@ -12145,7 +12145,7 @@
 2017-05-02  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug35/01_map_unpack.py, uncompyle6/parser.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse35.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse35.py:
 	BUILD_MAP_UNPACK'ing of dictionaries in 3.5
 
 2017-05-01  rocky <rb@dustyfeet.com>
@@ -12159,7 +12159,7 @@
 2017-04-29  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug35/01_map_unpack.py,
-	uncompyle6/parsers/parse35.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse35.py, uncompyle6/semantics/pysource.py:
 	Handle BUILD_MAP_UNPACK in a build_list
 
 2017-04-27  rocky <rb@dustyfeet.com>
@@ -12180,14 +12180,14 @@
 
 2017-04-22  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parser.py, uncompyle6/parsers/parse34.py: Reduse scope
+	* uncompyle6/parser.py, uncompyle6/parsers/parse34.py: Reduce scope
 	of LOAD_ASSERT as expr to 3.4+
 
 2017-04-22  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parser.py, uncompyle6/verify.py: LOAD_ASSERT can also
 	be an expr This may have the undesirable property that assert statements might
-	get tagged with equivalant low-level Python code that uses "raise
+	get tagged with equivalent low-level Python code that uses "raise
 	AssertionError", but so be it.  Fixes #103
 
 2017-04-22  R. Bernstein <rocky@users.noreply.github.com>
@@ -12200,7 +12200,7 @@
 
 2017-04-22  rocky <rb@dustyfeet.com>
 
-	* HISTORY.md: History keeps gettting amended
+	* HISTORY.md: History keeps getting amended
 
 2017-04-22  rocky <rb@dustyfeet.com>
 
@@ -12219,7 +12219,7 @@
 2017-04-22  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug33/02_pos_args.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/make_function.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/make_function.py:
 	3.3+ bug in handling single kwarg after * Towards fixing issue #110
 
 2017-04-20  rocky <rb@dustyfeet.com>
@@ -12245,7 +12245,7 @@
 
 2017-04-17  rocky <rb@dustyfeet.com>
 
-	* test/simple_source/bug36/{01_if_file.py => 01_extended_arg.py}: 
+	* test/simple_source/bug36/{01_if_file.py => 01_extended_arg.py}:
 	Rename test case to something more appropriate
 
 2017-04-17  rocky <rb@dustyfeet.com>
@@ -12306,7 +12306,7 @@
 
 2017-04-14  rocky <rb@dustyfeet.com>
 
-	* test/simple_source/bug27+/{03_if_true_else.py => 03_if_1_else.py}: 
+	* test/simple_source/bug27+/{03_if_true_else.py => 03_if_1_else.py}:
 	Better names for a test
 
 2017-04-13  rocky <rb@dustyfeet.com>
@@ -12326,7 +12326,7 @@
 
 2017-04-13  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse23.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse23.py, uncompyle6/semantics/pysource.py:
 	Add Python 2.3 rule for "if 1: ..." Fully fixes #97 for Python 2.3. Python 2.4 was fixed in a previous
 	commit.
 
@@ -12349,13 +12349,13 @@
 2017-04-11  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug31/04_def_annotate.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Towards fixing annotated decorator functions...  and annotate functions
 
 2017-04-10  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse2.py, uncompyle6/scanners/scanner27.py,
-	uncompyle6/semantics/check_ast.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/check_ast.py, uncompyle6/semantics/pysource.py:
 	Misc bugs parse2.py: restore accidently-removed while1stmt rule scanner27.py:
 	grammar typo check_ast: add while1else to list of looping constructs
 	pysource.py: CALL_FUNCTION_VAR_KW_ARGS with positional args rule is
@@ -12374,7 +12374,7 @@
 2017-04-09  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/def/10_kw+pos_args-bug.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Another Python 3.5 FUNCTION_VAR bug Fixes #94
 
 2017-04-09  rocky <rb@dustyfeet.com>
@@ -12488,7 +12488,7 @@
 
 2017-02-28  rocky <rb@dustyfeet.com>
 
-	* README.rst, uncompyle6/parser.py, uncompyle6/parsers/parse26.py: 
+	* README.rst, uncompyle6/parser.py, uncompyle6/parsers/parse26.py:
 	Python 2.6 a == b or c == d == 3 grammar bug
 
 2017-02-28  rocky <rb@dustyfeet.com>
@@ -12539,7 +12539,7 @@
 
 2017-02-20  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse35.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse35.py:
 	Python 3.x needs more "while 1" grammar rules
 
 2017-02-20  rocky <rb@dustyfeet.com>
@@ -12669,7 +12669,7 @@
 
 2017-01-15  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py:
 	Handle 3.6 BUILD_CONST_KEYMAP
 
 2017-01-15  rocky <rb@dustyfeet.com>
@@ -12702,7 +12702,7 @@
 2017-01-10  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug35/03_double_star_unpack.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Improve BUILD_xxx_UNPACK slightly
 
 2017-01-09  rocky <rb@dustyfeet.com>
@@ -12721,7 +12721,7 @@
 
 2017-01-08  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse30.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse30.py, uncompyle6/scanners/scanner3.py:
 	Python 3.0 decompile bugs
 
 2017-01-08  rocky <rb@dustyfeet.com>
@@ -12752,7 +12752,7 @@
 2017-01-07  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug35/03_async_await.py,
-	uncompyle6/parsers/parse35.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse35.py, uncompyle6/semantics/pysource.py:
 	Start to add 3.5+ await and async
 
 2017-01-07  rocky <rb@dustyfeet.com>
@@ -12770,7 +12770,7 @@
 
 2017-01-07  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/make_function.py: Small Pyhton 3.x annotate
+	* uncompyle6/semantics/make_function.py: Small Python 3.x annotate
 	bug
 
 2017-01-03  rocky <rb@dustyfeet.com>
@@ -12789,7 +12789,7 @@
 
 2017-01-02  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse35.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse35.py, uncompyle6/scanners/scanner3.py:
 	Python 3.5 continue detection bug
 
 2017-01-01  rocky <rb@dustyfeet.com>
@@ -12799,7 +12799,7 @@
 
 2017-01-01  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse35.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse35.py, uncompyle6/scanners/scanner3.py:
 	Towards fixing Python 3.5 return bugs
 
 2017-01-01  rocky <rb@dustyfeet.com>
@@ -12826,12 +12826,12 @@
 
 2016-12-29  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py:
 	dectect_structure() -> detect_control_flow()
 
 2016-12-29  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py:
 	DRY code and emitted Python 3 source * Python 3: break; continue -> break * Use variable in detect_structure for pre[rtarget] * Make Python 2 and Python 3 detect_structure more alie
 
 2016-12-29  rocky <rb@dustyfeet.com>
@@ -12868,7 +12868,7 @@
 2016-12-27  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/semantics/pysource.py:
 	WIP : Add THEN to disambigute from "and"
 
 2016-12-27  rocky <rb@dustyfeet.com>
@@ -12882,11 +12882,11 @@
 
 2016-12-26  R. Bernstein <rocky@users.noreply.github.com>
 
-	* : Merge pull request #71 from jiangpengcheng/tupple_bug tupples which contain only 1 element need a comma
+	* : Merge pull request #71 from jiangpengcheng/tupple_bug tuples which contain only 1 element need a comma
 
 2016-12-26  jiangpch <jiangpch@gohighsec.com>
 
-	* uncompyle6/semantics/pysource.py: tupples which contain only 1
+	* uncompyle6/semantics/pysource.py: tuples which contain only 1
 	element need a comma
 
 2016-12-26  rocky <rb@dustyfeet.com>
@@ -12913,7 +12913,7 @@
 	uncompyle6/parsers/parse36.py, uncompyle6/scanners/scanner15.py,
 	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner21.py,
 	uncompyle6/scanners/scanner22.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Lint
 
 2016-12-24  rocky <rb@dustyfeet.com>
@@ -12930,7 +12930,7 @@
 	* uncompyle6/bin/pydisassemble.py, uncompyle6/bin/uncompile.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse25.py,
 	uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py:
 	Python flake8 crap Was testing realgud's C-x!8 (goto flake8 warning/error)
 
 2016-12-18  rocky <rb@dustyfeet.com>
@@ -12941,7 +12941,7 @@
 
 2016-12-17  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner25.py: 
+	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner25.py:
 	show-asm on python2.5 is optional make scanner2 look a little more like scanner3
 
 2016-12-16  rocky <rb@dustyfeet.com>
@@ -13030,7 +13030,7 @@
 
 2016-11-28  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse36.py:
 	Shorten Python3 grammars with + and *
 
 2016-11-28  rocky <rb@dustyfeet.com>
@@ -13069,7 +13069,7 @@
 2016-11-24  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/helper.py, uncompyle6/semantics/pysource.py:
 	2.7 grammar bug workaround. Fix docstring bug
 
 2016-11-24  rocky <rb@dustyfeet.com>
@@ -13079,7 +13079,7 @@
 
 2016-11-24  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner2.py:
 	<2.7 "if" detection and dup Python 3 grammar rule
 
 2016-11-23  rocky <rb@dustyfeet.com>
@@ -13162,7 +13162,7 @@
 2016-11-20  rocky <rb@dustyfeet.com>
 
 	* pytest/test_fjt.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py:
 	Start to improve detect_structure for 2.7 and 2.x Add debug flag to find_jump_targets to show the structure we found.
 	When there are control-flow bugs, it's often reflected here.  scanner3.py: make code make more similar to 2.x code
 
@@ -13178,7 +13178,7 @@
 2016-11-16  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug26/03_if_vs_and.py, uncompyle6/main.py,
-	uncompyle6/semantics/check_ast.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/check_ast.py, uncompyle6/semantics/pysource.py:
 	More AST checking Small fixes in output format
 
 2016-11-15  rocky <rb@dustyfeet.com>
@@ -13198,17 +13198,17 @@
 
 2016-11-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py:
 	WIP remove COME_FROMs around ignore_if's
 
 2016-11-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py:
 	WIP remove COME_FROMs around ignore_if's
 
 2016-11-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py: 
+	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py:
 	Show line numbers in 2.6 "after" asm ..  start to understand some of the Python 2.6 bytecode parse failures.
 
 2016-11-13  rocky <rb@dustyfeet.com>
@@ -13244,7 +13244,7 @@
 2016-11-11  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parser.py, uncompyle6/semantics/check_ast.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Revert augassign change but..  Make note of what's going on and add grammar test for bad situations
 	we have in Python 2.6 (and perhaps others)
 
@@ -13264,7 +13264,7 @@
 2016-11-10  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/main.py, uncompyle6/semantics/check_ast.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Detect some erroneous decompilations Until we can actually prevent these in grammar rules, we will warn
 	of improper decompilations.  Also, we now stop when we hit a decompile error. Previously we were
 	not.
@@ -13276,7 +13276,7 @@
 2016-11-07  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/parsers/parse30.py,
-	uncompyle6/parsers/parse32.py: Possiby tidy grammar
+	uncompyle6/parsers/parse32.py: Possibly tidy grammar
 
 2016-11-06  rocky <rb@dustyfeet.com>
 
@@ -13331,13 +13331,13 @@
 
 2016-10-30  rocky <rb@dustyfeet.com>
 
-	* .gitignore, README.rst, test/simple_source/def/03_class_method.py: 
+	* .gitignore, README.rst, test/simple_source/def/03_class_method.py:
 	Note github unpyc3 and..  - Add source to bytecode_2.2/03_class_method.pyc - more ignore
 
 2016-10-30  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/make_function.py: More source-code line
-	indention in make_function..  and remove Python 3 situations from make_function2()
+	indentation in make_function..  and remove Python 3 situations from make_function2()
 
 2016-10-29  rocky <rb@dustyfeet.com>
 
@@ -13360,20 +13360,20 @@
 
 	* pytest/test_grammar.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse31.py, uncompyle6/parsers/parse32.py,
-	uncompyle6/parsers/parse35.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse35.py, uncompyle6/semantics/pysource.py:
 	More complete annotate handling Still have a bit of work to do though.
 
 2016-10-28  rocky <rb@dustyfeet.com>
 
 	* pytest/test_grammar.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/parse32.py, uncompyle6/parsers/parse33.py,
-	uncompyle6/parsers/parse34.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse34.py, uncompyle6/semantics/pysource.py:
 	Expand annotate return to Python 3.4
 
 2016-10-28  rocky <rb@dustyfeet.com>
 
 	* pytest/test_grammar.py, uncompyle6/parsers/parse31.py,
-	uncompyle6/parsers/parse32.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse32.py, uncompyle6/semantics/pysource.py:
 	Expand annotate handling to 3.3 (and possibly 3.2) - DRY Python 3.1-3.3 grammar a little
 
 2016-10-28  rocky <rb@dustyfeet.com>
@@ -13386,7 +13386,7 @@
 2016-10-27  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug31/{04_def_attr.py => 04_def_annotate.py},
-	uncompyle6/parsers/parse31.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse31.py, uncompyle6/semantics/pysource.py:
 	Clean and fix Python 3 annotate arg return
 
 2016-10-26  rocky <rb@dustyfeet.com>
@@ -13461,7 +13461,7 @@
 2016-10-20  moagstar <moagstar@gmail.com>
 
 	* pytest/test_fstring.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py:
 	further work on supporting single and multiple fstring decompilation
 
 2016-10-20  rocky <rb@dustyfeet.com>
@@ -13472,7 +13472,7 @@
 2016-10-19  moagstar <moagstar@gmail.com>
 
 	* pytest/test_fstring.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse36.py, uncompyle6/semantics/pysource.py:
 	urther work on fstrings for python 3.6 - there is a new opcode
 	build_string which is used to improve fstring performance, but broke
 	the fstring support in uncompyle
@@ -13508,7 +13508,7 @@
 2016-10-13  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py: 2.6 try statement (and below) They may neeed arbitrary come_froms for each except clause
+	uncompyle6/scanners/scanner26.py: 2.6 try statement (and below) They may need arbitrary come_froms for each except clause
 
 2016-10-13  rocky <rb@dustyfeet.com>
 
@@ -13582,7 +13582,7 @@
 2016-10-08  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/bin/uncompile.py, uncompyle6/parsers/parse21.py,
-	uncompyle6/semantics/pysource.py: Simpify python 2.1 grammar Fix bug
+	uncompyle6/semantics/pysource.py: Simplify python 2.1 grammar Fix bug
 	with -t ...  Wasn't showing source text when -t option was given
 
 2016-10-08  rocky <rb@dustyfeet.com>
@@ -13660,13 +13660,13 @@
 2016-10-05  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py:
 	Python 3: "and" doesn't have optional come_from
 
 2016-10-05  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py:
 	Python 3: "and" doesn't have optional come_from
 
 2016-10-05  rocky <rb@dustyfeet.com>
@@ -13696,7 +13696,7 @@
 2016-09-26  rocky <rb@dustyfeet.com>
 
 	* HISTORY.md, uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py:
 	Interval order COME_FROMs in Python3 This bug had possibly caused lots of grammar pollution which may
 	need addressing.  We want to process COME_FROMs to the same offset to be in
 	*descending* order so we have the larger range or biggest
@@ -13746,7 +13746,7 @@
 	* pytest/test_grammar.py, pytest/test_single_compile.py,
 	test/Makefile, uncompyle6/parsers/parse3.py,
 	uncompyle6/scanners/scanner3.py: Add COME_FROM_LOOP Note: we have regressed in --verify and some tests, but I believe
-	that's because we are producing more equivalant (if uglier)
+	that's because we are producing more equivalent (if uglier)
 	programs. That's a separate problem though.
 
 2016-09-22  rocky <rb@dustyfeet.com>
@@ -13781,7 +13781,7 @@
 
 2016-09-21  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py: 
+	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py:
 	Python 2 & 3 scanner code ever so slightly closer
 
 2016-09-21  rocky <rb@dustyfeet.com>
@@ -13791,7 +13791,7 @@
 2016-09-18  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/semantics/pysource.py:
 	Small changes
 
 2016-09-11  rocky <rb@dustyfeet.com>
@@ -13802,7 +13802,7 @@
 2016-09-11  rocky <rb@dustyfeet.com>
 
 	* test/bytecode_3.6/fstring.py,
-	test/bytecode_3.6/fstring_single.py, uncompyle6/parsers/parse35.py: 
+	test/bytecode_3.6/fstring_single.py, uncompyle6/parsers/parse35.py:
 	Tidy a bit
 
 2016-09-09  rocky <rb@dustyfeet.com>
@@ -13816,7 +13816,7 @@
 
 2016-09-09  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/scanners/scanner2.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/scanners/scanner2.py, uncompyle6/semantics/pysource.py:
 	ret_cond adjustment for < 2.7 and ...  "<= 2.6" -> "< 2.7" since python 2.6's version is 2.6000001
 
 2016-09-09  rocky <rb@dustyfeet.com>
@@ -13838,7 +13838,7 @@
 
 2016-09-08  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Python 3.0-3.2 *args processing
 
 2016-09-08  rocky <rb@dustyfeet.com>
@@ -13874,7 +13874,7 @@
 
 	* uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse26.py,
 	uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py:
 	Python 2.6- try/except control flow detection
 
 2016-09-04  rocky <rb@dustyfeet.com>
@@ -13909,7 +13909,7 @@
 
 	* test/simple_source/bug26/07_generator_return.py,
 	uncompyle6/scanners/scanner2.py, uncompyle6/semantics/pysource.py: A
-	couple more 2.6 (and below) bugs fixed * Detect "return None" inside if statement * another case of triple ==, ==, ==      scanner2.py: detect_structure: descriminate more on parent type
+	couple more 2.6 (and below) bugs fixed * Detect "return None" inside if statement * another case of triple ==, ==, ==      scanner2.py: detect_structure: discriminate more on parent type
 
 2016-09-03  rocky <rb@dustyfeet.com>
 
@@ -13925,7 +13925,7 @@
 
 	* test/simple_source/bug26/08_triple_equals.py,
 	uncompyle6/scanners/scanner2.py: Python 2.2..2.6 bug in a == b == c
-	== d Fix was to remove some come froms. Feels a little hacky though.
+	== d Fix was to remove some COME_FROMS. Feels a little hacky though.
 
 2016-09-03  rocky <rb@dustyfeet.com>
 
@@ -13949,19 +13949,19 @@
 2016-09-02  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug26/06_return_pop.py,
-	uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py: 
+	uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py:
 	Python 2.6- bug: RETURN_ENDIF, POP_TOP ..  POP_TOP should be excluded as a potentional statement beginning
 
 2016-09-02  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug33/02_named_and_kwargs.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/semantics/pysource.py:
 	Fix Python 3.x named param and kwargs bug
 
 2016-09-01  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug26/04_while_and_stmt_one_line.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py:
 	2.6- bug: while..and: stmt - on one line If 2.6 or before POP_BLOCK after a JUMP_IF_FALSE does not constitute
 	a new statement. The POP_BLOCK is really part of the JUMP_IF_FALSE.
 	In Python 2.7+ it's a single op.
@@ -13969,7 +13969,7 @@
 2016-09-01  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug26/02_except_as.py,
-	uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py:
 	Handle Python 2.6 and below "except <cond>, <var>"
 
 2016-08-31  rocky <rb@dustyfeet.com>
@@ -13985,7 +13985,7 @@
 	uncompyle6/scanners/scanner3.py, uncompyle6/verify.py: Bug in 3.x
 	detecting "if" structure and ...  scanner3.py: bug in 3.x detecting "if" structure Make scanner2.py
 	look more like scanner3.py verify.py: add weak-verify which tests
-	Pytyon syntax, but not code
+	Python syntax, but not code
 
 2016-08-30  rocky <rb@dustyfeet.com>
 
@@ -14111,7 +14111,7 @@
 	* README.rst, uncompyle6/parser.py, uncompyle6/parsers/parse22.py,
 	uncompyle6/scanner.py, uncompyle6/scanners/scanner22.py,
 	uncompyle6/scanners/scanner23.py, uncompyle6/scanners/scanner24.py,
-	uncompyle6/scanners/scanner25.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner25.py, uncompyle6/semantics/pysource.py:
 	Start handling Python 2.2 bytecode and...  Fix some bugs in Python 2.3-2.5 bytecode handling
 
 2016-08-11  Omer Katz <omer.drow@gmail.com>
@@ -14180,7 +14180,7 @@
 2016-07-29  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse35.py, uncompyle6/scanner.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py:
 	Fix 3.5 misclassifying RETURN_VALUE We use location of SETUP_EXCEPT instructions to disambiguate.
 
 2016-07-28  Daniel Bradburn <moagstar@gmail.com>
@@ -14279,13 +14279,13 @@
 
 2016-07-27  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse2.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse2.py, uncompyle6/semantics/pysource.py:
 	Small code clean up
 
 2016-07-26  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/scanners/tok.py, uncompyle6/semantics/fragments.py,
-	uncompyle6/verify.py: Usuability fixes * try using format for __str__ * Explicitly nuke self.attr and self.pattr when no arg * Sync pysource and format wrt make_function
+	uncompyle6/verify.py: Usability fixes * try using format for __str__ * Explicitly nuke self.attr and self.pattr when no arg * Sync pysource and format wrt make_function
 
 2016-07-26  rocky <rb@dustyfeet.com>
 
@@ -14307,7 +14307,7 @@
 	test/simple_source/bug_pypy27/03_try_return.py,
 	uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py:
 	More PyPy grammar rules * assert one and two-arg form * trystmt Simplify adding multiple grammar rules
 
 2016-07-25  rocky <rb@dustyfeet.com>
@@ -14369,7 +14369,7 @@
 	* README.rst, test/simple_source/stmts/03_if_elif.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse27.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py:
 	Handle PyPy JUMP_IF_NOT_DEBUG Update README.rst to note PyPY and reorganize a little
 
 2016-07-25  rocky <rb@dustyfeet.com>
@@ -14391,7 +14391,7 @@
 	test/Makefile, test/test_pythonlib.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/scanner.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py:
 	PyPy support * Use proper PYPY 32 opcodes * handle opcodes LOOKUP_METHOD and CALL_METHOD * Administrative stuff for PyPy
 
 2016-07-24  Daniel Bradburn <moagstar@gmail.com>
@@ -14411,19 +14411,19 @@
 2016-07-23  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug27+/05_for_try_except.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner27.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner27.py:
 	Another 2.7 'continue' detection bug
 
 2016-07-23  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug27+/05_for_try_except.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner27.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner27.py:
 	Another 2.7 'continue' detection bug
 
 2016-07-23  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/bug27+/05_for_try_except.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner27.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner27.py:
 	Another 2.7 'continue' detection bug
 
 2016-07-23  rocky <rb@dustyfeet.com>
@@ -14472,7 +14472,7 @@
 
 2016-07-17  rocky <rb@dustyfeet.com>
 
-	* pytest/testdata/if-2.7.right, pytest/testdata/ifelse-2.7.right: 
+	* pytest/testdata/if-2.7.right, pytest/testdata/ifelse-2.7.right:
 	Adjust test data for changed disasm output
 
 2016-07-16  rocky <rb@dustyfeet.com>
@@ -14506,14 +14506,14 @@
 
 2016-07-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Attempt to get 3.5 RETURN_END_IF working This feels hacky and I'm not sure is quite right.  Untili we
 	understand better what to do though, we'll go with it.
 
 2016-07-14  rocky <rb@dustyfeet.com>
 
 	* test/Makefile, uncompyle6/semantics/pysource.py: 3.x __qualname__
-	= supression Class names have become more complicated so the pattern test needs
+	= suppression Class names have become more complicated so the pattern test needs
 	to be more complex as well. Sigh
 
 2016-07-14  rocky <rb@dustyfeet.com>
@@ -14576,7 +14576,7 @@
 
 	* test/simple_source/bug33/05_store_name.py,
 	test/simple_source/comprehension/05_3x_set_comphension.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Python 3.2 & 3.3 handle STORE_NAME better
 
 2016-07-11  rocky <rb@dustyfeet.com>
@@ -14631,13 +14631,13 @@
 
 2016-07-10  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py:
 	Bugs caused by 3.x jump_forward misclasification
 
 2016-07-10  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py:
 	Python 3 better CONTINUE op classification Also document what's up with JUMP_ABSOLUTE classification
 
 2016-07-09  rocky <rb@dustyfeet.com>
@@ -14728,7 +14728,7 @@
 
 	* uncompyle6/scanners/scanner3.py,
 	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner33.py,
-	uncompyle6/scanners/scanner34.py, uncompyle6/scanners/scanner35.py: 
+	uncompyle6/scanners/scanner34.py, uncompyle6/scanners/scanner35.py:
 	Python 3 code cleanup
 
 2016-07-08  rocky <rb@dustyfeet.com>
@@ -14749,7 +14749,7 @@
 2016-07-08  rocky <rocky@gnu.org>
 
 	* uncompyle6/parsers/parse24.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner24.py, uncompyle6/scanners/scanner26.py: 
+	uncompyle6/scanners/scanner24.py, uncompyle6/scanners/scanner26.py:
 	Python 2.4 generator expressions and gen_comp_body
 
 2016-07-08  rocky <rocky@gnu.org>
@@ -14765,7 +14765,7 @@
 	uncompyle6/parser.py, uncompyle6/parsers/parse24.py,
 	uncompyle6/parsers/parse25.py, uncompyle6/scanner.py,
 	uncompyle6/scanners/scanner24.py, uncompyle6/scanners/scanner25.py,
-	uncompyle6/semantics/pysource.py: Start handling Pyton 2.4 bytecodes
+	uncompyle6/semantics/pysource.py: Start handling Python 2.4 bytecodes
 
 2016-07-08  rocky <rocky@gnu.org>
 
@@ -14775,12 +14775,12 @@
 2016-07-08  rocky <rocky@gnu.org>
 
 	* test/simple_source/stmts/11_return_val.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py:
 	2.5/2.6 RETURN_VALUE bug
 
 2016-07-08  rocky <rocky@gnu.org>
 
-	* uncompyle6/parsers/parse25.py, uncompyle6/parsers/parse26.py: 
+	* uncompyle6/parsers/parse25.py, uncompyle6/parsers/parse26.py:
 	2.5/2.6 fn name clash fixes list conprehension problem
 
 2016-07-08  rocky <rocky@gnu.org>
@@ -14808,7 +14808,7 @@
 
 2016-07-07  rocky <rocky@gnu.org>
 
-	* : Remove 2.7 asynchat verifcation for now
+	* : Remove 2.7 asynchat verification for now
 
 2016-07-07  rocky <rocky@gnu.org>
 
@@ -14822,7 +14822,7 @@
 
 2016-07-07  rocky <rocky@gnu.org>
 
-	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py: 
+	* uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py:
 	<2.6 make sure jump back on loops is really "back"
 
 2016-07-07  rocky <rocky@gnu.org>
@@ -14869,7 +14869,7 @@
 
 	* uncompyle6/semantics/fragments.py,
 	uncompyle6/semantics/pysource.py: More offsets captrued Add %b
-	specifer %b - associate text before specifier pysource.py: small doc
+	specifier %b - associate text before specifier pysource.py: small doc
 	correction
 
 2016-07-03  rocky <rocky@gnu.org>
@@ -14881,12 +14881,12 @@
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse26.py,
 	uncompyle6/parsers/parse27.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py:
 	Another 2.6 while stmt. Clean up grammar a little
 
 2016-07-03  rocky <rocky@gnu.org>
 
-	* uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py: 
+	* uncompyle6/parsers/parse26.py, uncompyle6/scanners/scanner2.py:
 	2.6 improper tagging of RETURN_END_IF
 
 2016-07-02  rocky <rocky@gnu.org>
@@ -14923,7 +14923,7 @@
 2016-06-30  rocky <rocky@gnu.org>
 
 	* test/simple_source/stmts/06_for_break.py,
-	uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py:
 	More 2.6.9 bugs fixed * break loop parsing bug * ifelsestmt semantic-action bug in handling else
 
 2016-06-30  rocky <rocky@gnu.org>
@@ -14940,13 +14940,13 @@
 2016-06-30  rocky <rocky@gnu.org>
 
 	* test/simple_source/comprehension/05_for_for.py,
-	uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py:
 	2.6.9 list comprehension
 
 2016-06-30  rocky <rocky@gnu.org>
 
 	* test/simple_source/exception/07_try_pass.py,
-	uncompyle6/scanners/scanner2.py: <= 2.6 weird jump out of try block Allow COME_FROMs to appare via JUMP_FORWARD in tey/except blocks
+	uncompyle6/scanners/scanner2.py: <= 2.6 weird jump out of try block Allow COME_FROMs to appare via JUMP_FORWARD in try/except blocks
 
 2016-06-30  rocky <rocky@gnu.org>
 
@@ -14982,7 +14982,7 @@
 
 2016-06-28  rocky <rocky@gnu.org>
 
-	* uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py:
 	Weird 2.6.9 list comprehension
 
 2016-06-28  rocky <rocky@gnu.org>
@@ -14999,17 +14999,17 @@
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse26.py,
 	uncompyle6/parsers/parse27.py, uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner25.py, uncompyle6/scanners/scanner26.py: 
+	uncompyle6/scanners/scanner25.py, uncompyle6/scanners/scanner26.py:
 	Base 2.5 off of 2.6. Some other small bugs.
 
 2016-06-27  rocky <rocky@gnu.org>
 
 	* uncompyle6/parser.py, uncompyle6/parsers/parse26.py: 2.6 try
-	except hadnling works now
+	except handling works now
 
 2016-06-27  rocky <rocky@gnu.org>
 
-	* uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse26.py, uncompyle6/semantics/pysource.py:
 	2.6 list comprehensions
 
 2016-06-27  rocky <rocky@gnu.org>
@@ -15029,8 +15029,8 @@
 
 2016-06-24  rocky <rocky@gnu.org>
 
-	* : WIP Python-2.6 but don't remove opcodes The scheme for turning 2.6 bytecode into 2.7 psuedo bytecode I think
-	is a lose.  I won't work for fragment handling.  Instead, change the grammar and syntax rules This also has the benefits: * We see how code generation changed over releases   by looking at grammar and semantic rules rather   than arbitrary code * We can better assocate with what's running   (in a sense this is a restatement of broken fragment    handling) * With the right structure in place we are in a better position to   handle 2.5, 2.4, etc. That is, after a while, the incremental
+	* : WIP Python-2.6 but don't remove opcodes The scheme for turning 2.6 bytecode into 2.7 pseudo bytecode I think
+	is a lose.  I won't work for fragment handling.  Instead, change the grammar and syntax rules This also has the benefits: * We see how code generation changed over releases   by looking at grammar and semantic rules rather   than arbitrary code * We can better associate with what's running   (in a sense this is a restatement of broken fragment    handling) * With the right structure in place we are in a better position to   handle 2.5, 2.4, etc. That is, after a while, the incremental
 	  changes to get say from python 2.3 bytecode to python 2.7 are
 	great.  Conflicts:         uncompyle6/parsers/astnode.py
 
@@ -15040,7 +15040,7 @@
 
 2016-06-24  rocky <rocky@gnu.org>
 
-	* uncompyle6/scanners/scanner2.py: Small formating changes ...  and premonition of 2.6 byteocde work
+	* uncompyle6/scanners/scanner2.py: Small formatting changes ...  and premonition of 2.6 byteocde work
 
 2016-06-24  rocky <rocky@gnu.org>
 
@@ -15052,7 +15052,7 @@
 	* __pkginfo__.py, uncompyle6/parsers/astnode.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse26.py,
 	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner26.py,
-	uncompyle6/semantics/pysource.py: WIP 2.6 redo bytecode handling Don't try to convert 2.6 bytecode to 2.7 psuedo bytecode.  Instead
+	uncompyle6/semantics/pysource.py: WIP 2.6 redo bytecode handling Don't try to convert 2.6 bytecode to 2.7 pseudo bytecode.  Instead
 	adjust grammar and semantic actions.  Down the line we should to segregate version changes in semantic
 	code better.
 
@@ -15094,7 +15094,7 @@
 2016-06-22  rocky <rocky@gnu.org>
 
 	* test/simple_source/expression/05_yield_from.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	differing ways to do "yield from" in 3.3-3.5
 
 2016-06-22  rocky <rocky@gnu.org>
@@ -15103,7 +15103,7 @@
 	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner23.py,
 	uncompyle6/scanners/scanner25.py, uncompyle6/scanners/scanner26.py,
 	uncompyle6/scanners/scanner27.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Add Python 3.5 yield from and ...  * fragments.py: Handle pass stmt sometimes * scanners: regularize Python 2 scanners some * test/test_pyenvlib.py: add python 3.5.1 option
 
 2016-06-22  rocky <rocky@gnu.org>
@@ -15113,7 +15113,7 @@
 
 2016-06-22  rocky <rocky@gnu.org>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	More 3.2 LOAD_CONST removal More python3 custom grammar DRYing
 
 2016-06-22  rocky <rocky@gnu.org>
@@ -15125,7 +15125,7 @@
 
 	* test/simple_source/expression/05_lambda.py,
 	test/simple_source/expression/10_lambda.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Python 3.2 MAKE_FUNCTION adjustment
 
 2016-06-22  rocky <rocky@gnu.org>
@@ -15144,18 +15144,18 @@
 
 2016-06-20  rocky <rocky@gnu.org>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Bang on Python 3.2 decompiling.
 
 2016-06-20  rocky <rocky@gnu.org>
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/scanner.py,
-	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner3.py:
 	Python 3 needs Python2's RETURN_END_IF Make python2 and python3 scanner look more the same
 
 2016-06-20  rocky <rocky@gnu.org>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py:
 	previous 2.7 class decorator bug fixed in 3.x
 
 2016-06-20  rocky <rocky@gnu.org>
@@ -15187,7 +15187,7 @@
 
 	* test/simple_source/def/11_mkfunc_closure.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	3.x make closure kw args handling bug
 
 2016-06-20  rocky <rocky@gnu.org>
@@ -15224,7 +15224,7 @@
 	* test/simple_source/comprehension/05_set_comprehension.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/scanners/scanner27.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	2.7 and 3.x bug in dict comprehensions
 
 2016-06-19  rocky <rocky@gnu.org>
@@ -15242,7 +15242,7 @@
 
 	* test/simple_source/looping/08_while_except_bug.py,
 	uncompyle6/parser.py, uncompyle6/parsers/parse2.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Python 3 except clause parsing bug
 
 2016-06-19  rocky <rocky@gnu.org>
@@ -15304,18 +15304,18 @@
 	* pytest/test_deparse.py,
 	test/simple_source/comprehension/05_set_comprehension.py,
 	uncompyle6/parser.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Fix python 3 set comprehension and ...  Add a few set/list comprehension offsets for Python 3
 
 2016-06-06  rocky <rocky@gnu.org>
 
 	* uncompyle6/parser.py, uncompyle6/parsers/astnode.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	small changes
 
 2016-06-06  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/fragments.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/fragments.py:
 	include offset for starting listcomp
 
 2016-06-03  rocky <rocky@gnu.org>
@@ -15337,7 +15337,7 @@
 	uncompyle6/scanners/scanner2.py, uncompyle6/scanners/scanner23.py,
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner3.py,
 	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py,
-	uncompyle6/scanners/scanner35.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner35.py, uncompyle6/semantics/pysource.py:
 	Limited support for Python 2.3
 
 2016-06-03  rocky <rocky@gnu.org>
@@ -15435,7 +15435,7 @@
 2016-05-29  rocky <rocky@gnu.org>
 
 	* uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner25.py, uncompyle6/scanners/scanner26.py: 
+	uncompyle6/scanners/scanner25.py, uncompyle6/scanners/scanner26.py:
 	Bang again on Python 2.5 and 2.6 scanners
 
 2016-05-29  rocky <rocky@gnu.org>
@@ -15447,7 +15447,7 @@
 2016-05-29  rocky <rocky@gnu.org>
 
 	* uncompyle6/scanners/scanner2.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py:
 	Start to DRY 2.6 scanner Note: can't use xdis 2.6 opcode until another xdis release.
 
 2016-05-29  rocky <rocky@gnu.org>
@@ -15464,7 +15464,7 @@
 
 	* uncompyle6/scanners/scanner3.py,
 	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner33.py,
-	uncompyle6/scanners/scanner34.py, uncompyle6/scanners/scanner35.py: 
+	uncompyle6/scanners/scanner34.py, uncompyle6/scanners/scanner35.py:
 	DRY scanners more
 
 2016-05-28  rocky <rocky@gnu.org>
@@ -15479,7 +15479,7 @@
 	* test/simple_source/comprehension/06_list_ifnot.py,
 	test/simple_source/comprehension/10-list-ifnot.py,
 	uncompyle6/scanners/dis3.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/scanners/scanner35.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner35.py, uncompyle6/semantics/pysource.py:
 	Remove dis3. Fix in 3.x list if not comprehension
 
 2016-05-28  rocky <rocky@gnu.org>
@@ -15490,7 +15490,7 @@
 2016-05-28  rocky <rocky@gnu.org>
 
 	* uncompyle6/opcodes/opcode_32.py, uncompyle6/opcodes/opcode_33.py,
-	uncompyle6/opcodes/opcode_34.py, uncompyle6/scanners/scanner3.py: 
+	uncompyle6/opcodes/opcode_34.py, uncompyle6/scanners/scanner3.py:
 	Remove dup 3.x opcodes
 
 2016-05-28  rocky <rocky@gnu.org>
@@ -15500,7 +15500,7 @@
 2016-05-28  rocky <rocky@gnu.org>
 
 	* uncompyle6/scanner.py, uncompyle6/scanners/scanner32.py,
-	uncompyle6/scanners/scanner33.py, uncompyle6/scanners/scanner34.py: 
+	uncompyle6/scanners/scanner33.py, uncompyle6/scanners/scanner34.py:
 	xdis for Python 3 opcodes
 
 2016-05-28  rocky <rocky@gnu.org>
@@ -15545,7 +15545,7 @@
 	test/simple_source/def/06_return_bug.py,
 	uncompyle6/semantics/pysource.py: final RETURN removal bug We want to remove a final return from a module, but otherwise not.
 	Note we'll no lonager be able to verify functools.pyc as there is
-	now a return after a raise statement. That will have to be delt with
+	now a return after a raise statement. That will have to be dealt with
 	separately.  May address Issue #17.
 
 2016-05-22  rocky <rocky@gnu.org>
@@ -15591,7 +15591,7 @@
 2016-05-20  rocky <rocky@gnu.org>
 
 	* uncompyle6/semantics/fragments.py,
-	uncompyle6/semantics/pysource.py: Fragment fixes fragments.py:  * Use "%x" specifier if for iterators  * Add '%D' interpretation pysource.py:   TABLE_DIRECT can get messed up from running fragments   duplicate "%x" specifier to igore fragment stuff
+	uncompyle6/semantics/pysource.py: Fragment fixes fragments.py:  * Use "%x" specifier if for iterators  * Add '%D' interpretation pysource.py:   TABLE_DIRECT can get messed up from running fragments   duplicate "%x" specifier to ignore fragment stuff
 
 2016-05-19  rocky <rocky@gnu.org>
 
@@ -15602,7 +15602,7 @@
 2016-05-18  rocky <rocky@gnu.org>
 
 	* pytest/test_marsh.py,
-	test/simple_source/expression/06_frozenset.py, uncompyle6/marsh.py: 
+	test/simple_source/expression/06_frozenset.py, uncompyle6/marsh.py:
 	Handle marshal frozenset
 
 2016-05-18  rocky <rocky@gnu.org>
@@ -15642,14 +15642,14 @@
 2016-05-17  rocky <rocky@gnu.org>
 
 	* pytest/test_marsh.py,
-	test/simple_source/expression/02_complex.py, uncompyle6/marsh.py: 
+	test/simple_source/expression/02_complex.py, uncompyle6/marsh.py:
 	Fix marshal bug in handling complex numbers
 
 2016-05-17  rocky <rocky@gnu.org>
 
 	* Makefile, test/simple_source/def/09_class_closure.py,
 	uncompyle6/parser.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Fix Python 3.x bugs * class definitions made via closures * Add "make check-short" to top-level * parse3.py: Python 3.3 uses STORE_LOGALS
 
 2016-05-16  rocky <rocky@gnu.org>
@@ -15665,7 +15665,7 @@
 
 2016-05-16  rocky <rocky@gnu.org>
 
-	* : Readd some 3.x loop tests
+	* : Re-add some 3.x loop tests
 
 2016-05-16  rocky <rocky@gnu.org>
 
@@ -15719,7 +15719,7 @@
 
 	* test/simple_source/expression/05_lambda.py,
 	test/test_pyenvlib.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/semantics/pysource.py:
 	Fix bug in Python 3 lambda expression handling Some other small cleanup changes
 
 2016-05-15  rocky <rocky@gnu.org>
@@ -15727,7 +15727,7 @@
 	* uncompyle6/bin/pydisassemble.py, uncompyle6/disas.py,
 	uncompyle6/parser.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner34.py,
-	uncompyle6/scanners/scanner35.py, uncompyle6/scanners/tok.py: 
+	uncompyle6/scanners/scanner35.py, uncompyle6/scanners/tok.py:
 	pydisassemble disassemble without grammar mangling Some other small cleanups as well
 
 2016-05-15  rocky <rocky@gnu.org>
@@ -15767,7 +15767,7 @@
 
 	* uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py,
 	uncompyle6/scanners/scanner34.py, uncompyle6/scanners/scanner35.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	DRY scanner34 and scanner35 handle 3.0..3.4 build maps as key/value pairs
 
 2016-05-15  rocky <rocky@gnu.org>
@@ -15776,7 +15776,7 @@
 
 2016-05-14  rocky <rocky@gnu.org>
 
-	* test/Makefile, uncompyle6/scanners/dis3.py: Python2 comptability
+	* test/Makefile, uncompyle6/scanners/dis3.py: Python2 compatibility
 	in using Python 3 disassembly Also fixes ablility to run bytecode 3.5 tests from 2.x now For Python 2 reading python3 bytstrings, we need to make sure we
 	confer the character to a number.
 
@@ -15800,7 +15800,7 @@
 2016-05-14  rocky <rocky@gnu.org>
 
 	* ChangeLog, __pkginfo__.py, uncompyle6/version.py: Fix botched
-	entry point names Get ready for relase 2.3.6
+	entry point names Get ready for release 2.3.6
 
 2016-05-14  rocky <rocky@gnu.org>
 
@@ -15839,7 +15839,7 @@
 2016-05-12  rocky <rocky@gnu.org>
 
 	* uncompyle6/scanners/scanner26.py,
-	uncompyle6/scanners/scanner27.py, uncompyle6/scanners/scanner35.py: 
+	uncompyle6/scanners/scanner27.py, uncompyle6/scanners/scanner35.py:
 	More small changes
 
 2016-05-12  rocky <rocky@gnu.org>
@@ -15856,7 +15856,7 @@
 
 	* __pkginfo__.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Misc fixups/cleanups * parse3.py Had botched if-for-else test by grammar addition * semantics/*.py: Show errorstack in failed parse when -g (requires
 	sparck 1.2.0) * some optimization in scanner3
 
@@ -15870,7 +15870,7 @@
 	uncompyle6/parsers/parse3.py, uncompyle6/scanners/dis35.py,
 	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner34.py,
 	uncompyle6/scanners/scanner35.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Redo make_function for *, arg main(*, file='foo') and things like that now work
 
 2016-05-11  rocky <rocky@gnu.org>
@@ -15902,7 +15902,7 @@
 2016-05-09  rocky <rocky@gnu.org>
 
 	* test/simple_source/stmts/09_whiletrue_bug.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Python 3 "while True" bug
 
 2016-05-09  rocky <rocky@gnu.org>
@@ -15972,7 +15972,7 @@
 
 	* test/simple_source/comprehension/10-list-ifnot.py,
 	uncompyle6/main.py, uncompyle6/parser.py: come_from_opt handles
-	and/or precidence properly main.py: give a better error message when file is not found.
+	and/or precedence properly main.py: give a better error message when file is not found.
 
 2016-05-08  rocky <rocky@gnu.org>
 
@@ -15996,7 +15996,7 @@
 
 	* HISTORY.md, test/simple_source/branching/10_if_pass.py,
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner35.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner35.py:
 	Fix 3.5 if..pass bug Update HISTORY.MD to include Dan Pascu. Some minor doc corrections
 
 2016-05-08  rocky <rocky@gnu.org>
@@ -16013,7 +16013,7 @@
 
 	* test/simple_source/expression/05_yield_from.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner35.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Handle Python 3 yield from Start dealing with MAKE_FUNCTION flags - not done yet.
 
 2016-05-06  rocky <rocky@gnu.org>
@@ -16042,7 +16042,7 @@
 	test/simple_source/stmts/10_if_break_finally.py,
 	uncompyle6/opcodes/opcode_27.py, uncompyle6/parser.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py: More
-	Python 2 and 3 deparsing bugs fixed * while + if break * try + finall /pass
+	Python 2 and 3 deparsing bugs fixed * while + if break * try + finally pass
 
 2016-05-05  rocky <rb@dustyfeet.com>
 
@@ -16078,19 +16078,19 @@
 2016-05-05  rocky <rocky@gnu.org>
 
 	* test/simple_source/def/05_abc_class.py,
-	test/simple_source/def/06_classbug.py, uncompyle6/parsers/parse3.py: 
+	test/simple_source/def/06_classbug.py, uncompyle6/parsers/parse3.py:
 	Python 3.5 abc.py bug distilled
 
 2016-05-05  rocky <rocky@gnu.org>
 
-	* uncompyle6/scanners/dis35.py, uncompyle6/scanners/scanner35.py: 
+	* uncompyle6/scanners/dis35.py, uncompyle6/scanners/scanner35.py:
 	Add cross-Python-protable 3.5 dis module
 
 2016-05-04  rocky <rocky@gnu.org>
 
 	* test/simple_source/stmts/05_with.py,
 	uncompyle6/opcodes/opcode_35.py, uncompyle6/parser.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner35.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner35.py:
 	Handle 3.5 with [as] scanner35.py: Fix a small variable-name typo
 
 2016-05-03  rocky <rocky@gnu.org>
@@ -16100,7 +16100,7 @@
 2016-05-03  rocky <rocky@gnu.org>
 
 	* uncompyle6/scanners/scanner3.py,
-	uncompyle6/scanners/scanner34.py, uncompyle6/scanners/scanner35.py: 
+	uncompyle6/scanners/scanner34.py, uncompyle6/scanners/scanner35.py:
 	Don't repeat next_except_jump
 
 2016-05-03  rocky <rb@dustyfeet.com>
@@ -16150,7 +16150,7 @@
 
 	* ChangeLog, NEWS, __pkginfo__.py, bin/pydisassemble,
 	bin/uncompyle6, setup.py, uncompyle6/__init__.py,
-	uncompyle6/version.py: Add -V | --version and simplfy changing it
+	uncompyle6/version.py: Add -V | --version and simplify changing it
 
 2016-05-01  rocky <rocky@gnu.org>
 
@@ -16212,13 +16212,13 @@
 
 2016-04-30  rocky <rocky@gnu.org>
 
-	* uncompyle6/parsers/parse3.py: Python 3.5 if statments decompyle Sometimes it doesn't need JUMP_FORWARD _come_from _come_from For example: def handle2(module):     if module == 'foo':         try:             module = 1         except ImportError as exc:             module = exc     return module And: if __name__:     for i in (1, 2):         x = 3
+	* uncompyle6/parsers/parse3.py: Python 3.5 if statements decompyle Sometimes it doesn't need JUMP_FORWARD _come_from _come_from For example: def handle2(module):     if module == 'foo':         try:             module = 1         except ImportError as exc:             module = exc     return module And: if __name__:     for i in (1, 2):         x = 3
 
 2016-04-28  rocky <rocky@gnu.org>
 
 	* requirements.txt, uncompyle6/parser.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	spark -> spark_parser
 
 2016-04-28  rocky <rocky@gnu.org>
@@ -16366,7 +16366,7 @@
 2016-01-02  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/scanner.py, uncompyle6/scanners/scanner25.py,
-	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py: 
+	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py:
 	Make ScannerXX() initialization the same on Python 2.x and 3.x
 
 2016-01-02  rocky <rb@dustyfeet.com>
@@ -16460,7 +16460,7 @@
 2015-12-31  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/def/05_class.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Handle Python 3.3 > dotted class names
 
 2015-12-30  rocky <rb@dustyfeet.com>
@@ -16483,7 +16483,7 @@
 
 2015-12-30  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	* uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Remove accidental schmutz. Try using pattr on 3.4 to get fn names
 
 2015-12-30  rocky <rb@dustyfeet.com>
@@ -16523,14 +16523,14 @@
 
 2015-12-30  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/parsers/parse3.py: Tidy parse3 grammer a little
+	* uncompyle6/parsers/parse3.py: Tidy parse3 grammar a little
 
 2015-12-30  rocky <rb@dustyfeet.com>
 
 	* test/simple_source/exception/25_try_except.py,
 	test/test_pythonlib.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/scanners/scanner27.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/scanners/scanner34.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/scanners/scanner34.py, uncompyle6/semantics/pysource.py:
 	Towards Python3 getting try/except working more often.
 
 2015-12-29  rocky <rb@dustyfeet.com>
@@ -16563,7 +16563,7 @@
 
 	* README.rst, test/Makefile, uncompyle6/opcodes/opcode_32.py,
 	uncompyle6/opcodes/opcode_33.py, uncompyle6/opcodes/opcode_34.py,
-	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner32.py: 
+	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner32.py:
 	scanner3: Python 2.6 compatibility: change set initializations. Get
 	rid of * import opcode_*: only a little of the much-needed larger
 	cleanup Makefile: remove 3.x bytecode checking from Python 2.x for
@@ -16582,7 +16582,7 @@
 
 	* uncompyle6/disas.py, uncompyle6/load.py, uncompyle6/main.py,
 	uncompyle6/marsh.py, uncompyle6/scanners/scanner3.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Add Python3 marshal codes and start to handle cross-version Python
 	code object types, introducing scan.Code3
 
@@ -16632,7 +16632,7 @@
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py,
 	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner32.py,
 	uncompyle6/scanners/scanner33.py, uncompyle6/scanners/scanner34.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	DRY Python3 scanner code. Some cross version handling fixed.  Some
 	Python 3.2 and 3.3 deparse fixes.
 
@@ -16648,7 +16648,7 @@
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py,
 	uncompyle6/scanners/scanner3.py, uncompyle6/scanners/scanner32.py,
 	uncompyle6/scanners/scanner33.py, uncompyle6/scanners/scanner34.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	DRY Python3 scanner code. Some cross version handling fixed.  Some
 	Python 3.2 and 3.3 deparse fixes.
 
@@ -16708,9 +16708,9 @@
 	test/simple_source/{simple_stmts => stmts}/15_assert.py,
 	test/simple_source/stmts/15_for_if.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/parse3.py,
-	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py: 
+	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py:
 	Fix up looping by reinstating JUMP_ABSOLUTE -> JUMP_BACK or CONTINUE
-	get jump offsets into jump attributes. Fix up 3.2 scanner paritally
+	get jump offsets into jump attributes. Fix up 3.2 scanner partially
 	and use that in 3.4 for in cross version disassembly.
 
 2015-12-26  rocky <rb@dustyfeet.com>
@@ -16747,7 +16747,7 @@
 2015-12-25  rocky <rb@dustyfeet.com>
 
 	* .gitignore, ChangeLog, MANIFEST.in, NEWS, __pkginfo__.py,
-	test/Makefile: Get ready for releaes 2.0.0
+	test/Makefile: Get ready for release 2.0.0
 
 2015-12-25  rocky <rb@dustyfeet.com>
 
@@ -16777,7 +16777,7 @@
 
 	* pytest/test_load.py, test/dis-compare.py, uncompyle6/disas.py,
 	uncompyle6/load.py, uncompyle6/main.py, uncompyle6/verify.py: Show
-	embeded timestamp of byte-decompiled file
+	embedded timestamp of byte-decompiled file
 
 2015-12-23  rocky <rb@dustyfeet.com>
 
@@ -16792,7 +16792,7 @@
 
 	* test/simple_source/simple_stmts/00_import.py,
 	test/simple_source/simple_stmts/00_pass.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
 	Start Python3 class(superclass) handling
 
 2015-12-23  rocky <rb@dustyfeet.com>
@@ -16808,13 +16808,13 @@
 
 2015-12-23  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/semantics/fragments.py: Add fragmnet offsets for 'from
+	* uncompyle6/semantics/fragments.py: Add fragment offsets for 'from
 	x import..'
 
 2015-12-22  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/semantics/fragments.py,
-	uncompyle6/semantics/pysource.py: Propogate offsets in imports.
+	uncompyle6/semantics/pysource.py: Propagate offsets in imports.
 	Added a new %x format specifier.
 
 2015-12-22  rocky <rb@dustyfeet.com>
@@ -16826,7 +16826,7 @@
 	uncompyle6/opcodes/opcode_27.py, uncompyle6/opcodes/opcode_34.py,
 	uncompyle6/parsers/astnode.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/parsers/spark.py,
-	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py: 
+	uncompyle6/semantics/fragments.py, uncompyle6/semantics/pysource.py:
 	Allow comments in grammar rules. Start working on Python3 class (not
 	finished). More test organization.
 
@@ -16835,7 +16835,7 @@
 	* test/simple_source/def/01_class.py,
 	test/simple_source/def/10_class.py,
 	uncompyle6/opcodes/opcode_32.py, uncompyle6/opcodes/opcode_34.py,
-	uncompyle6/parsers/parse3.py: Remove Python2 buitin "print" from
+	uncompyle6/parsers/parse3.py: Remove Python2 builtin "print" from
 	Python3's grammr. Start class tests
 
 2015-12-22  rocky <rb@dustyfeet.com>
@@ -16843,7 +16843,7 @@
 	* bin/uncompyle6, uncompyle6/main.py, uncompyle6/parser.py,
 	uncompyle6/parsers/parse2.py, uncompyle6/parsers/spark.py,
 	uncompyle6/semantics/pysource.py: main.py, pysource.py DRY
-	deparse_code from main. Is better on showing exception errrors such
+	deparse_code from main. Is better on showing exception errors such
 	as when a pyc file is not found uncompyle6: Hook in --grammar option
 	to showing grammar.  rules. Default now does not show timestamp.
 
@@ -16870,7 +16870,7 @@
 	test/simple_source/slice/{01_slice.py => 02_slice.py},
 	uncompyle6/main.py, uncompyle6/parsers/parse3.py,
 	uncompyle6/parsers/spark.py, uncompyle6/semantics/pysource.py: Add
-	spark option to show grammer. Revise uncompyle options. Start to
+	spark option to show grammar. Revise uncompyle options. Start to
 	reorganize tests more
 
 2015-12-21  rocky <rb@dustyfeet.com>
@@ -16908,8 +16908,8 @@
 	test/simple_source/exception/01_try_except.py,
 	test/simple_source/misc/assign_none_str.py,
 	test/simple_source/{misc/assign.py => simple_stmts/00_assign.py},
-	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py: 
-	Start Python3 execption handling
+	uncompyle6/parsers/parse3.py, uncompyle6/semantics/pysource.py:
+	Start Python3 exception handling
 
 2015-12-21  rocky <rb@dustyfeet.com>
 
@@ -17019,7 +17019,7 @@
 
 	* test/Makefile, test/simple-source/misc/assign_none.py,
 	test/simple-source/misc/assign_none_str.py, uncompyle6/marsh.py,
-	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py: 
+	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py:
 	Python 3 decompilation from Python2
 
 2015-12-20  rocky <rb@dustyfeet.com>
@@ -17037,7 +17037,7 @@
 2015-12-20  rocky <rb@dustyfeet.com>
 
 	* Makefile, README.rst, test/Makefile, test/dis-compare.py,
-	uncompyle6/deparser.py, uncompyle6/disas.py, uncompyle6/walker.py: 
+	uncompyle6/deparser.py, uncompyle6/disas.py, uncompyle6/walker.py:
 	Go over makefiles to make "make check" work. walker, deparser: use
 	zip_longest
 
@@ -17048,8 +17048,8 @@
 
 2015-12-19  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/deparser.py, uncompyle6/walker.py: Python3 compatiblity
-	for getting precidence. n_mkfunc needs to key off of bytecode
+	* uncompyle6/deparser.py, uncompyle6/walker.py: Python3 compatibility
+	for getting precedence. n_mkfunc needs to key off of bytecode
 	version, not running Python version.
 
 2015-12-19  rocky <rb@dustyfeet.com>
@@ -17107,7 +17107,7 @@
 	test/simple-source/precedence/left.py,
 	test/simple-source/precedence/right.py,
 	test/simple-source/precedence/structure.py,
-	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner34.py: 
+	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner34.py:
 	Python 3 bytecode handles opcodes with varargs (better). Decompiling
 	assert works. Add more of the simple tests and their compiled
 	bytecode.
@@ -17135,7 +17135,7 @@
 	uncompyle6/scanners/scanner34.py: marshal.py: Python2 marshal code
 	shouldn't try to turn a code object into a string. parse3.py: handle
 	both keyword and positional function calls. scanner34.py: Remove
-	extra level of quoting in LOAD_CONST.  Keyward handling now works
+	extra level of quoting in LOAD_CONST.  Keyword handling now works
 	cross Python 2/3. Some other spelling and doc fixes.
 
 2015-12-18  rocky <rb@dustyfeet.com>
@@ -17144,12 +17144,12 @@
 	uncompyle6/disas.py, uncompyle6/parser.py,
 	uncompyle6/parsers/astnode.py, uncompyle6/parsers/parse2.py,
 	uncompyle6/parsers/parse3.py, uncompyle6/scanners/scanner27.py,
-	uncompyle6/walker.py: Python3 postional arguments. Clean up code
+	uncompyle6/walker.py: Python3 positional arguments. Clean up code
 	more along the lines of uncompyle3.
 
 2015-12-18  rocky <rb@dustyfeet.com>
 
-	* test/simple-source/comprehension/forelse.py, uncompyle6/disas.py: 
+	* test/simple-source/comprehension/forelse.py, uncompyle6/disas.py:
 	disas.py: Do better for finding/turning a .py file into a .pyc file
 	across supported versions of Python. Add for else list comprehension
 	test
@@ -17185,7 +17185,7 @@
 	uncompyle6/opcodes/opcode_25.py, uncompyle6/opcodes/opcode_26.py,
 	uncompyle6/opcodes/opcode_27.py, uncompyle6/scanners/scanner25.py,
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py,
-	uncompyle6/verify.py: Python 2.6 compatability via ericfrederich's
+	uncompyle6/verify.py: Python 2.6 compatibility via ericfrederich's
 	patch. DRY version-checking code
 
 2015-12-17  rocky <rb@dustyfeet.com>
@@ -17237,12 +17237,12 @@
 	test/simple-source/branching/ifelse.py,
 	test/simple-source/looping/for.py, uncompyle6/__init__.py,
 	uncompyle6/disas.py, uncompyle6/parsers/spark.py: Add spark grammar
-	debugging. Start to comment grammer construct covered by simple
+	debugging. Start to comment grammar construct covered by simple
 	tests.
 
 2015-12-17  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/opcodes/opcode_34.py, uncompyle6/parsers/parse3.py: 
+	* uncompyle6/opcodes/opcode_34.py, uncompyle6/parsers/parse3.py:
 	Python 3.4 correct grammar for some looping constructs
 
 2015-12-17  rocky <rb@dustyfeet.com>
@@ -17275,14 +17275,14 @@
 2015-12-16  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/deparser.py, uncompyle6/disas.py,
-	uncompyle6/parser.py, uncompyle6/scanner.py, uncompyle6/walker.py: 
+	uncompyle6/parser.py, uncompyle6/scanner.py, uncompyle6/walker.py:
 	Add LICENSE. Add demo programs and DRY code a little
 
 2015-12-16  rocky <rb@dustyfeet.com>
 
 	* uncompyle6/opcodes/opcode_34.py, uncompyle6/scanner.py,
 	uncompyle6/scanners/scanner25.py, uncompyle6/scanners/scanner26.py,
-	uncompyle6/scanners/scanner27.py, uncompyle6/scanners/scanner34.py: 
+	uncompyle6/scanners/scanner27.py, uncompyle6/scanners/scanner34.py:
 	On Python3.4 decompiling Python 3.4 instructions, use its built-in
 	disassembler routines. In contrast to what was here, they most
 	likely work!
@@ -17305,7 +17305,7 @@
 	test/source_3.4/branching/ifelse.py, uncompyle6/.gitignore,
 	uncompyle6/scanner.py, uncompyle6/scanners/scanner25.py,
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py,
-	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py: 
+	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py:
 	Start 3.4 more stringent disassembly testing. Disassembly format has
 	changed slightly. misc small bugs.
 
@@ -17338,7 +17338,7 @@
 	uncompyle6/deparser.py, uncompyle6/disas.py, uncompyle6/magics.py,
 	uncompyle6/marsh.py, uncompyle6/scanners/scanner25.py,
 	uncompyle6/scanners/scanner26.py, uncompyle6/scanners/scanner27.py,
-	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py: 
+	uncompyle6/scanners/scanner32.py, uncompyle6/scanners/scanner34.py:
 	Split out marhsal and disassemble code and spell disassemble
 	correctly.  Fix some lint issues
 
@@ -17423,7 +17423,7 @@
 
 2015-12-14  rocky <rb@dustyfeet.com>
 
-	* uncompyle6/{dparser.py => parser.py}, uncompyle6/walker.py: 
+	* uncompyle6/{dparser.py => parser.py}, uncompyle6/walker.py:
 	uncompyle6/dparser -> uncompyle6/parser
 
 2015-12-14  rocky <rb@dustyfeet.com>
@@ -17529,7 +17529,7 @@
 	test/ok_2.7/asynchat.pyc_dis, test/ok_2.7/asyncore.pyc_dis,
 	test/ok_2.7/atexit.pyc_dis, test/ok_2.7/audiodev.pyc_dis,
 	test/test_pythonlib.py, uncompyle6/walker.py: test_pythonlib: Fix
-	bug in traversing directores walker.py: imports; Add test Python2.5
+	bug in traversing directories walker.py: imports; Add test Python2.5
 	bytecode - it works! Makefile: remove temporary directories and _dis
 	files which were added by mistake
 
@@ -17601,7 +17601,7 @@
 	* MANIFEST, MANIFEST.in, PKG-INFO, README.rst,
 	uncompyle6/opcodes/opcode_23.py, uncompyle6/opcodes/opcode_26.py,
 	uncompyle6/opcodes/opcode_27.py, uncompyle6/scanner25.py,
-	uncompyle6/scanner26.py, uncompyle6/spark.py, uncompyle6/verify.py: 
+	uncompyle6/scanner26.py, uncompyle6/spark.py, uncompyle6/verify.py:
 	Correct MANIFEST->MANIFEST.in more lint
 
 2015-12-13  R. Bernstein <rocky@users.noreply.github.com>
@@ -17618,7 +17618,7 @@
 	uncompyle6/__init__.py, uncompyle6/disas.py,
 	uncompyle6/opcodes/opcode_25.py, uncompyle6/opcodes/opcode_26.py,
 	uncompyle6/scanner25.py, uncompyle6/scanner26.py,
-	uncompyle6/scanner34.py, uncompyle6/spark.py, uncompyle6/verify.py: 
+	uncompyle6/scanner34.py, uncompyle6/spark.py, uncompyle6/verify.py:
 	Make uncompyle6 run on Python3.4 and Python 2.7 We don't need our
 	own disassembler. Python's will do fine
 
@@ -17704,7 +17704,7 @@
 
 	* tox.ini, uncompyle-code.py, uncompyle6/dparser.py,
 	uncompyle6/scanner25.py, uncompyle6/scanner27.py,
-	uncompyle6/scanner34.py, uncompyle6/spark.py, uncompyle6/walker.py: 
+	uncompyle6/scanner34.py, uncompyle6/spark.py, uncompyle6/walker.py:
 	Minimal disassemble, ast compile and deparse work on Python 3.  Some
 	linting
 
@@ -17719,7 +17719,7 @@
 	uncompyle6/scanner.py, uncompyle6/scanner25.py,
 	uncompyle6/scanner26.py, uncompyle6/scanner27.py,
 	uncompyle6/verify.py, uncompyle6/walker.py: More Python3
-	compatability. Remove duplicate disassembly code and get it from
+	compatibility. Remove duplicate disassembly code and get it from
 	Python's standard library instead.
 
 2015-12-12  rocky <rb@dustyfeet.com>
@@ -17729,7 +17729,7 @@
 
 2015-12-11  rocky <rb@dustyfeet.com>
 
-	* uncompyle-code.py, uncompyle6/__init__.py, uncompyle6/walker.py: 
+	* uncompyle-code.py, uncompyle6/__init__.py, uncompyle6/walker.py:
 	python3 compatibiity and remove some flake8 warnings.
 
 2015-12-11  rocky <rb@dustyfeet.com>
@@ -17804,7 +17804,7 @@
 2013-07-16  root <root@debian>
 
 	* uncompyle2/__init__.py, uncompyle2/disas.py,
-	uncompyle2/magics.py, uncompyle2/scanner27.py, uncompyle2/walker.py: 
+	uncompyle2/magics.py, uncompyle2/scanner27.py, uncompyle2/walker.py:
 	marshal disassembly improvement
 
 2013-06-20  Mysterie <kajusska@gmail.com>
@@ -17992,4 +17992,3 @@
 2012-06-05  Mysterie <kajusska@gmail.com>
 
 	* first commit
-
